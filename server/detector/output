[
{
  "test": {
    "data": {
      "href": "/page1",
      "fullHref": "http://localhost:3000/page1"
    },
    "description": "Go to /page1 and back"
  },
  "result": {
    "leaks": {
      "collections": [],
      "eventListeners": [
        {
          "type": "resize",
          "after": 17,
          "before": 3,
          "delta": 14,
          "deltaPerIteration": 2,
          "leakingNodes": [
            {
              "countBefore": 2,
              "countAfter": 16,
              "delta": 14,
              "deltaPerIteration": 2,
              "description": "Window",
              "nodesBefore": [
                {
                  "className": "Window",
                  "description": "Window"
                }
              ],
              "nodesAfter": [
                {
                  "className": "Window",
                  "description": "Window"
                }
              ],
              "nodeCountDelta": 0,
              "nodeCountDeltaPerIteration": 0
            }
          ]
        }
      ],
      "eventListenersSummary": {
        "before": 141,
        "after": 155,
        "delta": 14,
        "deltaPerIteration": 2
      },
      "domNodes": {
        "delta": 0,
        "deltaPerIteration": 0,
        "nodes": []
      },
      "objects": [
        {
          "name": "Detached <div>",
          "diff": {
            "name": "Detached <div>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102444,
              102150,
              102222,
              102294,
              102312,
              102528,
              102624
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <div>",
              "idxs": [
                103356
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <div>",
              "idxs": [
                102444,
                103854,
                102150,
                102222,
                102294,
                102312,
                102528,
                102624
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "Detached <h1>",
          "diff": {
            "name": "Detached <h1>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102402,
              102102,
              102180,
              102252,
              102354,
              102486,
              102582
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <h1>",
              "idxs": [
                103290
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <h1>",
              "idxs": [
                102402,
                103788,
                102102,
                102180,
                102252,
                102354,
                102486,
                102582
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "Detached ElementIntersectionObserverData",
          "diff": {
            "name": "Detached ElementIntersectionObserverData",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 504,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              394464,
              394746,
              394830,
              395250,
              395262,
              399348,
              402318
            ],
            "countDelta": 7,
            "sizeDelta": 504
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 72,
              "maxRet": 72,
              "name": "Detached ElementIntersectionObserverData",
              "idxs": [
                379746
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 576,
              "maxRet": 576,
              "name": "Detached ElementIntersectionObserverData",
              "idxs": [
                394578,
                394464,
                394746,
                394830,
                395250,
                395262,
                399348,
                402318
              ]
            }
          },
          "retainedSizeDelta": 504,
          "retainedSizeDeltaPerIteration": 72,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "HTMLAnchorElement",
          "diff": {
            "name": "HTMLAnchorElement",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 112,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              19452,
              19458,
              19464,
              19470,
              19476,
              19482,
              19488
            ],
            "countDelta": 7,
            "sizeDelta": 112
          },
          "aggregates": {
            "before": {
              "count": 7,
              "distance": 4,
              "self": 1248,
              "maxRet": 2032,
              "name": "HTMLAnchorElement",
              "idxs": [
                19866,
                103302,
                103554,
                221454,
                279150,
                302028,
                307980
              ]
            },
            "after": {
              "count": 14,
              "distance": 4,
              "self": 1360,
              "maxRet": 2144,
              "name": "HTMLAnchorElement",
              "idxs": [
                19914,
                103800,
                104052,
                216894,
                274608,
                297564,
                303612,
                19452,
                19458,
                19464,
                19470,
                19476,
                19482,
                19488
              ]
            }
          },
          "retainedSizeDelta": 112,
          "retainedSizeDeltaPerIteration": 16,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "EventListener",
          "diff": {
            "name": "EventListener",
            "addedCount": 17,
            "removedCount": 3,
            "addedSize": 1224,
            "removedSize": 216,
            "deletedIndexes": [
              383604,
              383802,
              383814
            ],
            "addedIndexes": [
              395058,
              395118,
              398562,
              399384,
              400014,
              400032,
              400044,
              400092,
              400134,
              400158,
              400224,
              400236,
              400272,
              400278,
              400296,
              400302,
              401136
            ],
            "countDelta": 14,
            "sizeDelta": 1008
          },
          "aggregates": {
            "before": {
              "count": 146,
              "distance": 6,
              "self": 10512,
              "maxRet": 22376,
              "name": "EventListener",
              "idxs": [
                382908,
                382944,
                383082,
                383094,
                383118,
                383166,
                383358,
                383370,
                383382,
                383388,
                383394,
                383400,
                383442,
                383448,
                383460,
                383484,
                383496,
                383526,
                383574,
                383592,
                383604,
                383706,
                383724,
                383778,
                383784,
                383802,
                383814,
                383826,
                383850,
                383862,
                383892,
                383922,
                383946,
                383970,
                384012,
                384018,
                384024,
                384030,
                384042,
                384048,
                384066,
                384084,
                384090,
                384096,
                384102,
                384108,
                384192,
                384198,
                384216,
                384222,
                384246,
                384258,
                384264,
                384282,
                384288,
                384300,
                384306,
                384318,
                384324,
                384330,
                384336,
                384348,
                384354,
                384360,
                384378,
                384384,
                384390,
                384408,
                384414,
                384420,
                384456,
                384462,
                384474,
                384486,
                384492,
                384504,
                384516,
                384534,
                384540,
                384546,
                384552,
                384558,
                384576,
                384594,
                384600,
                384606,
                384618,
                384624,
                384642,
                384648,
                384660,
                384684,
                384696,
                384708,
                384720,
                384732,
                384738,
                384792,
                384798,
                384804,
                384810,
                384822,
                384828,
                384834,
                384840,
                384846,
                384864,
                384870,
                384882,
                384918,
                384936,
                384942,
                384954,
                384960,
                384966,
                384972,
                384978,
                385062,
                385068,
                385098,
                385110,
                385122,
                385128,
                385140,
                385146,
                385182,
                385308,
                385314,
                385344,
                385404,
                385476,
                385608,
                385632,
                385722,
                385818,
                385854,
                385956,
                386016,
                386244,
                386460,
                386556,
                386574,
                386682,
                386688,
                386694,
                386724
              ]
            },
            "after": {
              "count": 160,
              "distance": 6,
              "self": 11520,
              "maxRet": 24336,
              "name": "EventListener",
              "idxs": [
                401442,
                400392,
                400530,
                400812,
                401214,
                400434,
                400038,
                401448,
                399288,
                399300,
                400698,
                395166,
                395124,
                397992,
                398814,
                398604,
                396144,
                399534,
                399594,
                402726,
                399162,
                399756,
                399828,
                399834,
                399960,
                400350,
                400362,
                400380,
                402852,
                400410,
                400446,
                396798,
                397212,
                396480,
                399522,
                398898,
                400566,
                400572,
                400770,
                400590,
                397860,
                400596,
                400602,
                396402,
                400680,
                400686,
                400692,
                400194,
                400716,
                395136,
                394938,
                399762,
                399774,
                400734,
                400746,
                400788,
                400794,
                400584,
                400800,
                395076,
                397950,
                395232,
                400848,
                399708,
                400890,
                400896,
                400902,
                399216,
                398328,
                396168,
                400926,
                400950,
                400962,
                398022,
                400980,
                400986,
                399894,
                400404,
                400998,
                395196,
                398958,
                399738,
                401046,
                398040,
                401064,
                401088,
                401094,
                401106,
                401112,
                399318,
                401124,
                401148,
                401532,
                402168,
                401178,
                401184,
                400464,
                400542,
                399186,
                394998,
                401196,
                401202,
                400938,
                401256,
                394908,
                401268,
                401292,
                401310,
                401322,
                401340,
                399120,
                400920,
                402342,
                401364,
                401370,
                401376,
                401400,
                395664,
                401412,
                402348,
                400560,
                399468,
                396162,
                399144,
                400254,
                397914,
                402156,
                402516,
                401748,
                399714,
                399042,
                402630,
                400470,
                401982,
                401358,
                400260,
                400704,
                402576,
                402018,
                401220,
                399630,
                401556,
                401544,
                395058,
                395118,
                398562,
                399384,
                400014,
                400032,
                400044,
                400092,
                400134,
                400158,
                400224,
                400236,
                400272,
                400278,
                400296,
                400302,
                401136
              ]
            }
          },
          "retainedSizeDelta": 1960,
          "retainedSizeDeltaPerIteration": 280,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "V8EventListener",
          "diff": {
            "name": "V8EventListener",
            "addedCount": 14,
            "removedCount": 0,
            "addedSize": 560,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              394926,
              395340,
              395448,
              395490,
              395604,
              395712,
              396282,
              396378,
              398094,
              398646,
              399228,
              399984,
              400098,
              400128
            ],
            "countDelta": 14,
            "sizeDelta": 560
          },
          "aggregates": {
            "before": {
              "count": 137,
              "distance": 7,
              "self": 5480,
              "maxRet": 11396,
              "name": "V8EventListener",
              "idxs": [
                380016,
                380100,
                380106,
                380112,
                380118,
                380124,
                380130,
                380136,
                380142,
                380148,
                380154,
                380160,
                380166,
                380172,
                380178,
                380184,
                380190,
                380196,
                380202,
                380208,
                380214,
                380220,
                380226,
                380232,
                380238,
                380244,
                380250,
                380256,
                380262,
                380268,
                380274,
                380280,
                380286,
                380292,
                380298,
                380304,
                380310,
                380316,
                380322,
                380328,
                380334,
                380340,
                380346,
                380352,
                380358,
                380364,
                380370,
                380376,
                380382,
                380412,
                380418,
                380424,
                380430,
                380436,
                380442,
                380448,
                380454,
                380460,
                380466,
                380472,
                380478,
                380484,
                380490,
                380496,
                380502,
                380508,
                380514,
                380538,
                380544,
                380550,
                380652,
                380748,
                380904,
                380946,
                381582,
                381834,
                381858,
                381870,
                381936,
                381942,
                381984,
                382548,
                382704,
                382782,
                382818,
                382938,
                382950,
                383454,
                383580,
                383676,
                383712,
                383742,
                383790,
                383856,
                383928,
                383952,
                384036,
                384072,
                384114,
                384204,
                384228,
                384270,
                384276,
                384294,
                384312,
                384366,
                384372,
                384396,
                384480,
                384582,
                384612,
                384630,
                384654,
                384678,
                384702,
                384714,
                384744,
                384924,
                384948,
                385074,
                385188,
                385356,
                385596,
                385758,
                385848,
                385860,
                385962,
                386250,
                386400,
                386406,
                386418,
                386442,
                386514,
                386550,
                386568,
                386760,
                386778
              ]
            },
            "after": {
              "count": 151,
              "distance": 7,
              "self": 6040,
              "maxRet": 12348,
              "name": "V8EventListener",
              "idxs": [
                395592,
                395748,
                395754,
                395760,
                395766,
                395772,
                395796,
                398640,
                395802,
                395808,
                395814,
                395820,
                395826,
                395832,
                395838,
                395844,
                395874,
                395892,
                395898,
                395910,
                395934,
                395940,
                395952,
                395958,
                394944,
                395502,
                396018,
                401538,
                396048,
                396054,
                396060,
                396066,
                396072,
                400932,
                396078,
                396084,
                396096,
                395496,
                396120,
                396126,
                396132,
                396150,
                396180,
                394962,
                396186,
                396198,
                396210,
                396216,
                396222,
                396228,
                396234,
                396252,
                396258,
                396264,
                395004,
                396270,
                396276,
                396312,
                396318,
                396324,
                396330,
                396342,
                396348,
                396354,
                396360,
                396366,
                396372,
                396384,
                395598,
                395064,
                396522,
                395208,
                400206,
                396756,
                395082,
                397710,
                397752,
                395670,
                397806,
                397812,
                399474,
                398472,
                398664,
                398826,
                398916,
                395172,
                400398,
                399438,
                399600,
                399702,
                399744,
                397956,
                394914,
                398634,
                402180,
                400416,
                398622,
                400578,
                400608,
                398868,
                395616,
                400722,
                401562,
                399768,
                398028,
                400806,
                400818,
                400872,
                396174,
                395202,
                401052,
                401070,
                401076,
                401118,
                399324,
                401130,
                401958,
                401298,
                401328,
                399492,
                399252,
                399132,
                401004,
                398478,
                396024,
                400476,
                401226,
                402186,
                399222,
                402522,
                396390,
                402546,
                402570,
                402702,
                402690,
                401550,
                395178,
                394926,
                395340,
                395448,
                395490,
                395604,
                395712,
                396282,
                396378,
                398094,
                398646,
                399228,
                399984,
                400098,
                400128
              ]
            }
          },
          "retainedSizeDelta": 952,
          "retainedSizeDeltaPerIteration": 136,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "Detached <a>",
          "diff": {
            "name": "Detached <a>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 6216,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102408,
              102420,
              102432,
              102108,
              102126,
              102138,
              102186,
              102198,
              102210,
              102258,
              102270,
              102282,
              102324,
              102336,
              102348,
              102492,
              102504,
              102516,
              102588,
              102600,
              102612
            ],
            "countDelta": 21,
            "sizeDelta": 6216
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 888,
              "maxRet": 888,
              "name": "Detached <a>",
              "idxs": [
                103308,
                103332,
                103344
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 7104,
              "maxRet": 7104,
              "name": "Detached <a>",
              "idxs": [
                102408,
                102420,
                102432,
                103806,
                103830,
                103842,
                102108,
                102126,
                102138,
                102186,
                102198,
                102210,
                102258,
                102270,
                102282,
                102324,
                102336,
                102348,
                102492,
                102504,
                102516,
                102588,
                102600,
                102612
              ]
            }
          },
          "retainedSizeDelta": 6216,
          "retainedSizeDeltaPerIteration": 888,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached <p>",
          "diff": {
            "name": "Detached <p>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 5376,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102414,
              102426,
              102438,
              102120,
              102132,
              102144,
              102192,
              102204,
              102216,
              102264,
              102276,
              102288,
              102318,
              102330,
              102342,
              102498,
              102510,
              102522,
              102594,
              102606,
              102618
            ],
            "countDelta": 21,
            "sizeDelta": 5376
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached <p>",
              "idxs": [
                103326,
                103338,
                103350
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 6144,
              "maxRet": 6144,
              "name": "Detached <p>",
              "idxs": [
                102414,
                102426,
                102438,
                103824,
                103836,
                103848,
                102120,
                102132,
                102144,
                102192,
                102204,
                102216,
                102264,
                102276,
                102288,
                102318,
                102330,
                102342,
                102498,
                102510,
                102522,
                102594,
                102606,
                102618
              ]
            }
          },
          "retainedSizeDelta": 5376,
          "retainedSizeDeltaPerIteration": 768,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached DOMTokenList",
          "diff": {
            "name": "Detached DOMTokenList",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1176,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              395520,
              395556,
              402846,
              395310,
              395394,
              395400,
              395418,
              395466,
              395484,
              395610,
              395850,
              395922,
              396000,
              397830,
              398460,
              398670,
              398874,
              399102,
              399366,
              400200,
              402270
            ],
            "countDelta": 21,
            "sizeDelta": 1176
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 168,
              "maxRet": 168,
              "name": "Detached DOMTokenList",
              "idxs": [
                380082,
                382044,
                383748
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1344,
              "maxRet": 1344,
              "name": "Detached DOMTokenList",
              "idxs": [
                395520,
                395556,
                400554,
                398010,
                399816,
                402846,
                395310,
                395394,
                395400,
                395418,
                395466,
                395484,
                395610,
                395850,
                395922,
                396000,
                397830,
                398460,
                398670,
                398874,
                399102,
                399366,
                400200,
                402270
              ]
            }
          },
          "retainedSizeDelta": 1176,
          "retainedSizeDeltaPerIteration": 168,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached EventListener",
          "diff": {
            "name": "Detached EventListener",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1512,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              399636,
              398610,
              400314,
              398880,
              398940,
              399048,
              399192,
              399276,
              399414,
              400068,
              400086,
              400110,
              400122,
              400152,
              400242,
              400266,
              400290,
              400458,
              401010,
              402366,
              402624
            ],
            "countDelta": 21,
            "sizeDelta": 1512
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 216,
              "maxRet": 216,
              "name": "Detached EventListener",
              "idxs": [
                383898,
                384498,
                384522
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1728,
              "maxRet": 1728,
              "name": "Detached EventListener",
              "idxs": [
                399636,
                398610,
                400314,
                399936,
                400944,
                400968,
                398880,
                398940,
                399048,
                399192,
                399276,
                399414,
                400068,
                400086,
                400110,
                400122,
                400152,
                400242,
                400266,
                400290,
                400458,
                401010,
                402366,
                402624
              ]
            }
          },
          "retainedSizeDelta": 1512,
          "retainedSizeDeltaPerIteration": 216,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached V8EventHandlerNonNull",
          "diff": {
            "name": "Detached V8EventHandlerNonNull",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 672,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              395550,
              398262,
              398616,
              395304,
              395430,
              395454,
              395460,
              395508,
              395790,
              395928,
              395964,
              398454,
              398466,
              398886,
              398934,
              398946,
              400074,
              400248,
              401304,
              401790,
              402372
            ],
            "countDelta": 21,
            "sizeDelta": 672
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 96,
              "maxRet": 96,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                380058,
                384528,
                386286
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                395550,
                395694,
                398262,
                398616,
                400974,
                401598,
                395304,
                395430,
                395454,
                395460,
                395508,
                395790,
                395928,
                395964,
                398454,
                398466,
                398886,
                398934,
                398946,
                400074,
                400248,
                401304,
                401790,
                402372
              ]
            }
          },
          "retainedSizeDelta": 672,
          "retainedSizeDeltaPerIteration": 96,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached Text",
          "diff": {
            "name": "Detached Text",
            "addedCount": 28,
            "removedCount": 0,
            "addedSize": 2464,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              402786,
              393966,
              394002,
              400548,
              393900,
              393906,
              393924,
              393930,
              393936,
              393942,
              393948,
              393954,
              393960,
              393972,
              393978,
              393984,
              393990,
              393996,
              395856,
              398124,
              399018,
              399108,
              399606,
              399900,
              399978,
              400752,
              401040,
              402612
            ],
            "countDelta": 28,
            "sizeDelta": 2464
          },
          "aggregates": {
            "before": {
              "count": 4,
              "distance": -5,
              "self": 352,
              "maxRet": 352,
              "name": "Detached Text",
              "idxs": [
                379242,
                379248,
                383424,
                383754
              ]
            },
            "after": {
              "count": 32,
              "distance": -5,
              "self": 2816,
              "maxRet": 2816,
              "name": "Detached Text",
              "idxs": [
                397866,
                393918,
                402786,
                393966,
                394002,
                399372,
                393912,
                400548,
                393900,
                393906,
                393924,
                393930,
                393936,
                393942,
                393948,
                393954,
                393960,
                393972,
                393978,
                393984,
                393990,
                393996,
                395856,
                398124,
                399018,
                399108,
                399606,
                399900,
                399978,
                400752,
                401040,
                402612
              ]
            }
          },
          "retainedSizeDelta": 2464,
          "retainedSizeDeltaPerIteration": 352,
          "countDelta": 28,
          "countDeltaPerIteration": 4,
          "numIterations": 7
        }
      ],
      "detected": true
    },
    "before": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44650,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45940,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45949,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1311,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 3299700,
        "v8heap": 3261100,
        "native": 38600,
        "code": 1341812,
        "jsArrays": 23576,
        "strings": 417916,
        "system": 238460
      }
    },
    "after": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44650,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45940,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45949,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1311,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 3616352,
        "v8heap": 3552952,
        "native": 63400,
        "code": 1625464,
        "jsArrays": 24420,
        "strings": 417960,
        "system": 238052
      }
    },
    "delta": 316652,
    "deltaPerIteration": 45236,
    "numIterations": 7
  }
},
{
  "test": {
    "data": {
      "href": "/page2",
      "fullHref": "http://localhost:3000/page2"
    },
    "description": "Go to /page2 and back"
  },
  "result": {
    "leaks": {
      "collections": [],
      "eventListeners": [],
      "eventListenersSummary": {
        "before": 139,
        "after": 139,
        "delta": 0,
        "deltaPerIteration": 0
      },
      "domNodes": {
        "delta": 0,
        "deltaPerIteration": 0,
        "nodes": []
      },
      "objects": [
        {
          "name": "Detached <div>",
          "diff": {
            "name": "Detached <div>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102528,
              102120,
              102186,
              102294,
              102378,
              102600,
              102660
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <div>",
              "idxs": [
                103428
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <div>",
              "idxs": [
                102528,
                103890,
                102120,
                102186,
                102294,
                102378,
                102600,
                102660
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "Detached <h1>",
          "diff": {
            "name": "Detached <h1>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102486,
              102138,
              102252,
              102312,
              102438,
              102558,
              102618
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <h1>",
              "idxs": [
                103362
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <h1>",
              "idxs": [
                102486,
                103824,
                102138,
                102252,
                102312,
                102438,
                102558,
                102618
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "FiberNode",
          "diff": {
            "name": "FiberNode",
            "addedCount": 20,
            "removedCount": 13,
            "addedSize": 2640,
            "removedSize": 1716,
            "deletedIndexes": [
              290436,
              290484,
              305574,
              305844,
              305874,
              305904,
              305910,
              305940,
              305946,
              305976,
              306018,
              306618,
              307182
            ],
            "addedIndexes": [
              294642,
              345354,
              379692,
              379758,
              379884,
              379902,
              379932,
              379950,
              379968,
              380676,
              381012,
              381276,
              381306,
              381336,
              381342,
              381372,
              381378,
              381408,
              381444,
              382566
            ],
            "countDelta": 7,
            "sizeDelta": 924
          },
          "aggregates": {
            "before": {
              "count": 36,
              "distance": 4,
              "self": 4752,
              "maxRet": 14788,
              "name": "FiberNode",
              "idxs": [
                269178,
                286602,
                286620,
                288540,
                288588,
                288630,
                288648,
                288978,
                289002,
                289242,
                289254,
                289284,
                289296,
                289326,
                289332,
                289716,
                289722,
                289758,
                289770,
                290376,
                290394,
                290436,
                290454,
                290484,
                304794,
                305574,
                305844,
                305874,
                305904,
                305910,
                305940,
                305946,
                305976,
                306018,
                306618,
                307182
              ]
            },
            "after": {
              "count": 43,
              "distance": 4,
              "self": 5676,
              "maxRet": 16404,
              "name": "FiberNode",
              "idxs": [
                273468,
                290844,
                290862,
                292758,
                292806,
                292848,
                292866,
                293196,
                293220,
                293460,
                293472,
                293502,
                293514,
                293544,
                293550,
                293934,
                293940,
                293976,
                293988,
                294582,
                294600,
                294660,
                308610,
                294642,
                345354,
                379692,
                379758,
                379884,
                379902,
                379932,
                379950,
                379968,
                380676,
                381012,
                381276,
                381306,
                381336,
                381342,
                381372,
                381378,
                381408,
                381444,
                382566
              ]
            }
          },
          "retainedSizeDelta": 1616,
          "retainedSizeDeltaPerIteration": 231,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "HTMLAnchorElement",
          "diff": {
            "name": "HTMLAnchorElement",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 112,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              19452,
              19458,
              19464,
              19470,
              19476,
              19482,
              19488
            ],
            "countDelta": 7,
            "sizeDelta": 112
          },
          "aggregates": {
            "before": {
              "count": 7,
              "distance": 4,
              "self": 1248,
              "maxRet": 2032,
              "name": "HTMLAnchorElement",
              "idxs": [
                19866,
                103374,
                103626,
                214050,
                246384,
                291084,
                297396
              ]
            },
            "after": {
              "count": 14,
              "distance": 4,
              "self": 1360,
              "maxRet": 2144,
              "name": "HTMLAnchorElement",
              "idxs": [
                19914,
                103836,
                104088,
                215616,
                247962,
                295248,
                301536,
                19452,
                19458,
                19464,
                19470,
                19476,
                19482,
                19488
              ]
            }
          },
          "retainedSizeDelta": 112,
          "retainedSizeDeltaPerIteration": 16,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "system / Context",
          "diff": {
            "name": "system / Context",
            "addedCount": 18,
            "removedCount": 11,
            "addedSize": 564,
            "removedSize": 424,
            "deletedIndexes": [
              304236,
              305334,
              306204,
              306318,
              306342,
              306804,
              306912,
              306936,
              307368,
              307476,
              307500
            ],
            "addedIndexes": [
              379374,
              379428,
              379482,
              379578,
              379584,
              379638,
              380418,
              380712,
              380772,
              381630,
              381738,
              381762,
              382188,
              382296,
              382320,
              382752,
              382860,
              382884
            ],
            "countDelta": 7,
            "sizeDelta": 140
          },
          "aggregates": {
            "before": {
              "count": 435,
              "distance": 3,
              "self": 20240,
              "maxRet": 222236,
              "name": "system / Context",
              "idxs": [
                189444,
                190848,
                190860,
                190872,
                190884,
                190896,
                190908,
                190920,
                190932,
                190944,
                190980,
                190992,
                191004,
                191046,
                191058,
                191070,
                191082,
                191094,
                191106,
                191118,
                191130,
                191142,
                191154,
                191166,
                191178,
                191190,
                191202,
                191214,
                191244,
                191256,
                191268,
                191280,
                191292,
                191304,
                191316,
                191352,
                191388,
                191430,
                191442,
                216348,
                217218,
                217230,
                217242,
                217254,
                217266,
                217278,
                217290,
                217302,
                217314,
                217338,
                217350,
                217362,
                217386,
                217398,
                217410,
                217422,
                217434,
                217446,
                217458,
                217470,
                217482,
                217494,
                217506,
                217518,
                217530,
                217542,
                217554,
                217566,
                217578,
                217590,
                217620,
                217638,
                217656,
                217674,
                217704,
                217728,
                217764,
                217776,
                221838,
                221874,
                222006,
                222282,
                229506,
                247086,
                247146,
                247164,
                247392,
                247404,
                247416,
                247428,
                247986,
                247992,
                248004,
                248016,
                248034,
                248082,
                248088,
                248094,
                248112,
                248130,
                248154,
                248166,
                248172,
                248208,
                248232,
                248238,
                248526,
                248550,
                248658,
                248700,
                248730,
                248748,
                248766,
                248808,
                248886,
                248904,
                249264,
                249294,
                249312,
                249570,
                249612,
                249702,
                249852,
                250026,
                250152,
                250200,
                250314,
                250572,
                250662,
                250692,
                250710,
                250962,
                250980,
                251022,
                251292,
                251334,
                251886,
                252138,
                252162,
                252180,
                252198,
                252216,
                252234,
                252252,
                252270,
                252288,
                252306,
                252324,
                252342,
                252360,
                252378,
                252396,
                252414,
                252432,
                252450,
                252468,
                252486,
                252504,
                252522,
                252534,
                253248,
                253260,
                253344,
                253362,
                253380,
                253398,
                253416,
                253434,
                253452,
                253470,
                253488,
                253506,
                253524,
                253542,
                253560,
                253578,
                253596,
                253614,
                253632,
                253650,
                253668,
                253686,
                253704,
                253716,
                260982,
                261102,
                264312,
                264324,
                264576,
                264594,
                264612,
                264678,
                264810,
                264828,
                264846,
                264864,
                264882,
                264900,
                264918,
                265020,
                265038,
                265056,
                265074,
                265104,
                265122,
                265140,
                265158,
                265176,
                272652,
                273564,
                273900,
                274680,
                274872,
                274944,
                275016,
                275088,
                275172,
                275244,
                275316,
                275562,
                275640,
                275796,
                275826,
                275844,
                275898,
                275916,
                275928,
                275946,
                275964,
                275982,
                276252,
                276324,
                276348,
                276372,
                276378,
                276384,
                276390,
                276396,
                276402,
                276408,
                276414,
                276420,
                276426,
                276432,
                276438,
                276444,
                276450,
                276456,
                276462,
                276468,
                276474,
                276480,
                276486,
                276492,
                276498,
                276504,
                276510,
                276516,
                276522,
                276528,
                276534,
                276540,
                276546,
                276552,
                276558,
                276564,
                276570,
                276576,
                276582,
                276588,
                276594,
                276600,
                276606,
                277422,
                277440,
                277452,
                277482,
                277494,
                277524,
                277818,
                284022,
                284040,
                288348,
                288366,
                288372,
                288390,
                288396,
                288414,
                288420,
                288438,
                288444,
                288450,
                288456,
                288462,
                288468,
                288486,
                288492,
                288498,
                288786,
                288834,
                304236,
                304842,
                305334,
                306204,
                306318,
                306342,
                306804,
                306912,
                306936,
                307368,
                307476,
                307500,
                310122,
                310422,
                310962,
                311220,
                311364,
                311580,
                311820,
                312342,
                312594,
                312786,
                312948,
                313002,
                313200,
                313512,
                313602,
                313722,
                314184,
                314310,
                314538,
                315282,
                315468,
                317778,
                317874,
                317976,
                318078,
                318180,
                318282,
                318378,
                318480,
                318582,
                318684,
                318780,
                318876,
                318978,
                319080,
                319182,
                319278,
                319380,
                319482,
                319584,
                319686,
                319782,
                319884,
                319980,
                320082,
                320178,
                320280,
                320382,
                320484,
                320586,
                320688,
                320790,
                320886,
                321588,
                321594,
                321612,
                321630,
                321648,
                321666,
                321684,
                321696,
                321714,
                321732,
                321750,
                321768,
                321786,
                321804,
                321822,
                321840,
                321858,
                321876,
                321894,
                321912,
                321930,
                322350,
                322710,
                323022,
                323154,
                323802,
                323850,
                323898,
                323946,
                323988,
                324042,
                324090,
                324138,
                324186,
                324234,
                324282,
                324510,
                324558,
                326472,
                326898,
                335418,
                340386,
                340392,
                340398,
                340410,
                340422,
                340428,
                340440,
                340452,
                340464,
                340476,
                340500,
                340506,
                340512,
                340524,
                340536,
                340542,
                340554,
                340566,
                340578,
                340590,
                344166,
                346314,
                346332,
                346560,
                364722,
                364908,
                364914,
                364920,
                364926
              ]
            },
            "after": {
              "count": 442,
              "distance": 3,
              "self": 20380,
              "maxRet": 254648,
              "name": "system / Context",
              "idxs": [
                190998,
                192414,
                192426,
                192438,
                192450,
                192462,
                192474,
                192486,
                192498,
                192510,
                192546,
                192558,
                192570,
                192612,
                192624,
                192636,
                192648,
                192660,
                192672,
                192684,
                192696,
                192708,
                192720,
                192732,
                192744,
                192756,
                192768,
                192780,
                192810,
                192822,
                192834,
                192846,
                192858,
                192870,
                192882,
                192918,
                192954,
                192996,
                193008,
                217914,
                218784,
                218796,
                218808,
                218820,
                218832,
                218844,
                218856,
                218868,
                218880,
                218904,
                218916,
                218928,
                218952,
                218964,
                218976,
                218988,
                219000,
                219012,
                219024,
                219036,
                219048,
                219060,
                219072,
                219084,
                219096,
                219108,
                219120,
                219132,
                219144,
                219156,
                219186,
                219204,
                219222,
                219240,
                219270,
                219294,
                219330,
                219342,
                223404,
                223440,
                223572,
                223848,
                231072,
                248664,
                248724,
                248742,
                248970,
                248982,
                248994,
                249006,
                249564,
                249570,
                249582,
                249594,
                249612,
                249660,
                249666,
                249672,
                249690,
                249708,
                249732,
                249744,
                249750,
                249786,
                249810,
                249816,
                250104,
                250128,
                250236,
                250278,
                250308,
                250326,
                250344,
                250386,
                250464,
                250482,
                250842,
                250872,
                250890,
                251148,
                251190,
                251280,
                251430,
                251604,
                251730,
                251778,
                251892,
                252150,
                252240,
                252270,
                252288,
                252540,
                252558,
                252600,
                252870,
                252912,
                253464,
                253716,
                253740,
                253758,
                253776,
                253794,
                253812,
                253830,
                253848,
                253866,
                253884,
                253902,
                253920,
                253938,
                253956,
                253974,
                253992,
                254010,
                254028,
                254046,
                254064,
                254082,
                254100,
                254112,
                254826,
                254838,
                254922,
                254940,
                254958,
                254976,
                254994,
                255012,
                255030,
                255048,
                255066,
                255084,
                255102,
                255120,
                255138,
                255156,
                255174,
                255192,
                255210,
                255228,
                255246,
                255264,
                255282,
                255294,
                262560,
                262680,
                265890,
                265902,
                266154,
                266172,
                266190,
                266256,
                266388,
                266406,
                266424,
                266442,
                266460,
                266478,
                266496,
                266598,
                266616,
                266634,
                266652,
                266682,
                266700,
                266718,
                266736,
                266754,
                276930,
                277842,
                278178,
                278964,
                279156,
                279228,
                279300,
                279372,
                279456,
                279528,
                279600,
                279846,
                279924,
                280080,
                280110,
                280128,
                280182,
                280200,
                280212,
                280230,
                280248,
                280266,
                280524,
                280596,
                280614,
                280638,
                280644,
                280650,
                280656,
                280662,
                280668,
                280674,
                280680,
                280686,
                280692,
                280698,
                280704,
                280710,
                280716,
                280722,
                280728,
                280734,
                280740,
                280746,
                280752,
                280758,
                280764,
                280770,
                280776,
                280782,
                280788,
                280794,
                280800,
                280806,
                280812,
                280818,
                280824,
                280830,
                280836,
                280842,
                280848,
                280854,
                280860,
                280866,
                280872,
                281676,
                281694,
                281706,
                281736,
                281748,
                281778,
                282072,
                288270,
                288288,
                292566,
                292584,
                292590,
                292608,
                292614,
                292632,
                292638,
                292656,
                292662,
                292668,
                292674,
                292680,
                292686,
                292704,
                292710,
                292716,
                293010,
                293052,
                308646,
                311910,
                312204,
                312858,
                313116,
                313260,
                313476,
                313716,
                314226,
                314478,
                314670,
                314832,
                314886,
                315084,
                315396,
                315486,
                315600,
                316050,
                316176,
                316404,
                317130,
                317316,
                319596,
                319692,
                319794,
                319896,
                319998,
                320100,
                320196,
                320298,
                320400,
                320502,
                320598,
                320694,
                320796,
                320898,
                321000,
                321096,
                321198,
                321300,
                321402,
                321504,
                321600,
                321702,
                321798,
                321900,
                321996,
                322098,
                322200,
                322302,
                322404,
                322506,
                322608,
                322704,
                323406,
                323412,
                323430,
                323448,
                323466,
                323484,
                323502,
                323514,
                323532,
                323550,
                323568,
                323586,
                323604,
                323622,
                323640,
                323658,
                323676,
                323694,
                323712,
                323730,
                323748,
                324168,
                324528,
                324840,
                324972,
                325620,
                325668,
                325716,
                325764,
                325806,
                325860,
                325908,
                325956,
                326004,
                326052,
                326100,
                326328,
                326376,
                328272,
                328692,
                338664,
                344088,
                344094,
                344100,
                344112,
                344124,
                344130,
                344142,
                344154,
                344166,
                344178,
                344202,
                344208,
                344214,
                344226,
                344238,
                344244,
                344256,
                344268,
                344280,
                344292,
                347568,
                349698,
                349716,
                349956,
                368790,
                368976,
                368982,
                368988,
                368994,
                379374,
                379428,
                379482,
                379578,
                379584,
                379638,
                380418,
                380712,
                380772,
                381630,
                381738,
                381762,
                382188,
                382296,
                382320,
                382752,
                382860,
                382884
              ]
            }
          },
          "retainedSizeDelta": 32412,
          "retainedSizeDeltaPerIteration": 4630,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "DOMTimer",
          "diff": {
            "name": "DOMTimer",
            "addedCount": 14,
            "removedCount": 0,
            "addedSize": 2688,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              396714,
              396726,
              396738,
              396750,
              396774,
              396786,
              396798,
              396810,
              396828,
              396834,
              396840,
              396846,
              396852,
              396864
            ],
            "countDelta": 14,
            "sizeDelta": 2688
          },
          "aggregates": {
            "before": {
              "count": 2,
              "distance": 6,
              "self": 384,
              "maxRet": 632,
              "name": "DOMTimer",
              "idxs": [
                380184,
                380196
              ]
            },
            "after": {
              "count": 16,
              "distance": 6,
              "self": 3072,
              "maxRet": 5056,
              "name": "DOMTimer",
              "idxs": [
                396858,
                396762,
                396714,
                396726,
                396738,
                396750,
                396774,
                396786,
                396798,
                396810,
                396828,
                396834,
                396840,
                396846,
                396852,
                396864
              ]
            }
          },
          "retainedSizeDelta": 4424,
          "retainedSizeDeltaPerIteration": 632,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "ScheduledAction",
          "diff": {
            "name": "ScheduledAction",
            "addedCount": 14,
            "removedCount": 0,
            "addedSize": 784,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              396720,
              396732,
              396744,
              396756,
              396780,
              396792,
              396804,
              396816,
              397110,
              397152,
              398082,
              398100,
              398190,
              398424
            ],
            "countDelta": 14,
            "sizeDelta": 784
          },
          "aggregates": {
            "before": {
              "count": 2,
              "distance": 7,
              "self": 112,
              "maxRet": 248,
              "name": "ScheduledAction",
              "idxs": [
                380190,
                380202
              ]
            },
            "after": {
              "count": 16,
              "distance": 7,
              "self": 896,
              "maxRet": 1984,
              "name": "ScheduledAction",
              "idxs": [
                398268,
                396768,
                396720,
                396732,
                396744,
                396756,
                396780,
                396792,
                396804,
                396816,
                397110,
                397152,
                398082,
                398100,
                398190,
                398424
              ]
            }
          },
          "retainedSizeDelta": 1736,
          "retainedSizeDeltaPerIteration": 248,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "V8Function",
          "diff": {
            "name": "V8Function",
            "addedCount": 14,
            "removedCount": 0,
            "addedSize": 560,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              397122,
              397908,
              398022,
              398094,
              398112,
              398202,
              398304,
              398316,
              398898,
              400230,
              400752,
              400968,
              402954,
              403194
            ],
            "countDelta": 14,
            "sizeDelta": 560
          },
          "aggregates": {
            "before": {
              "count": 2,
              "distance": 8,
              "self": 80,
              "maxRet": 136,
              "name": "V8Function",
              "idxs": [
                380508,
                380520
              ]
            },
            "after": {
              "count": 16,
              "distance": 8,
              "self": 640,
              "maxRet": 1088,
              "name": "V8Function",
              "idxs": [
                398280,
                398298,
                397122,
                397908,
                398022,
                398094,
                398112,
                398202,
                398304,
                398316,
                398898,
                400230,
                400752,
                400968,
                402954,
                403194
              ]
            }
          },
          "retainedSizeDelta": 952,
          "retainedSizeDeltaPerIteration": 136,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "Detached <a>",
          "diff": {
            "name": "Detached <a>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 6216,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102492,
              102504,
              102516,
              102144,
              102162,
              102174,
              102258,
              102270,
              102282,
              102318,
              102330,
              102342,
              102390,
              102420,
              102432,
              102564,
              102576,
              102588,
              102624,
              102636,
              102648
            ],
            "countDelta": 21,
            "sizeDelta": 6216
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 888,
              "maxRet": 888,
              "name": "Detached <a>",
              "idxs": [
                103380,
                103404,
                103416
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 7104,
              "maxRet": 7104,
              "name": "Detached <a>",
              "idxs": [
                102492,
                102504,
                102516,
                103842,
                103866,
                103878,
                102144,
                102162,
                102174,
                102258,
                102270,
                102282,
                102318,
                102330,
                102342,
                102390,
                102420,
                102432,
                102564,
                102576,
                102588,
                102624,
                102636,
                102648
              ]
            }
          },
          "retainedSizeDelta": 6216,
          "retainedSizeDeltaPerIteration": 888,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached <p>",
          "diff": {
            "name": "Detached <p>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 5376,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102498,
              102510,
              102522,
              102156,
              102168,
              102180,
              102264,
              102276,
              102288,
              102324,
              102336,
              102348,
              102384,
              102396,
              102426,
              102570,
              102582,
              102594,
              102630,
              102642,
              102654
            ],
            "countDelta": 21,
            "sizeDelta": 5376
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached <p>",
              "idxs": [
                103398,
                103410,
                103422
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 6144,
              "maxRet": 6144,
              "name": "Detached <p>",
              "idxs": [
                102498,
                102510,
                102522,
                103860,
                103872,
                103884,
                102156,
                102168,
                102180,
                102264,
                102276,
                102288,
                102324,
                102336,
                102348,
                102384,
                102396,
                102426,
                102570,
                102582,
                102594,
                102630,
                102642,
                102654
              ]
            }
          },
          "retainedSizeDelta": 5376,
          "retainedSizeDeltaPerIteration": 768,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached DOMTokenList",
          "diff": {
            "name": "Detached DOMTokenList",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1176,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              404412,
              398262,
              400794,
              397236,
              397512,
              397938,
              397980,
              398028,
              398052,
              398076,
              398208,
              398286,
              398406,
              399636,
              401436,
              402006,
              402240,
              402906,
              403200,
              404298,
              404304
            ],
            "countDelta": 21,
            "sizeDelta": 1176
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 168,
              "maxRet": 168,
              "name": "Detached DOMTokenList",
              "idxs": [
                380580,
                380976,
                383772
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1344,
              "maxRet": 1344,
              "name": "Detached DOMTokenList",
              "idxs": [
                404412,
                398262,
                398502,
                398040,
                400764,
                400794,
                397236,
                397512,
                397938,
                397980,
                398028,
                398052,
                398076,
                398208,
                398286,
                398406,
                399636,
                401436,
                402006,
                402240,
                402906,
                403200,
                404298,
                404304
              ]
            }
          },
          "retainedSizeDelta": 1176,
          "retainedSizeDeltaPerIteration": 168,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached EventListener",
          "diff": {
            "name": "Detached EventListener",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1512,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              397536,
              402234,
              403884,
              397194,
              398364,
              401160,
              401472,
              401922,
              402354,
              402378,
              402402,
              402414,
              402426,
              402432,
              402450,
              402462,
              402498,
              402936,
              403788,
              404322,
              404862
            ],
            "countDelta": 21,
            "sizeDelta": 1512
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 216,
              "maxRet": 216,
              "name": "Detached EventListener",
              "idxs": [
                384006,
                384012,
                384024
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1728,
              "maxRet": 1728,
              "name": "Detached EventListener",
              "idxs": [
                397536,
                402234,
                404394,
                404556,
                403074,
                403884,
                397194,
                398364,
                401160,
                401472,
                401922,
                402354,
                402378,
                402402,
                402414,
                402426,
                402432,
                402450,
                402462,
                402498,
                402936,
                403788,
                404322,
                404862
              ]
            }
          },
          "retainedSizeDelta": 1512,
          "retainedSizeDeltaPerIteration": 216,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached V8EventHandlerNonNull",
          "diff": {
            "name": "Detached V8EventHandlerNonNull",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 672,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              397266,
              401652,
              403608,
              397734,
              397872,
              397932,
              397974,
              398034,
              398166,
              398370,
              398574,
              399696,
              400950,
              401118,
              401496,
              401928,
              402438,
              402468,
              403182,
              404562,
              404844
            ],
            "countDelta": 21,
            "sizeDelta": 672
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 96,
              "maxRet": 96,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                380574,
                380604,
                384018
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                397266,
                398484,
                398532,
                401652,
                398496,
                403608,
                397734,
                397872,
                397932,
                397974,
                398034,
                398166,
                398370,
                398574,
                399696,
                400950,
                401118,
                401496,
                401928,
                402438,
                402468,
                403182,
                404562,
                404844
              ]
            }
          },
          "retainedSizeDelta": 672,
          "retainedSizeDeltaPerIteration": 96,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached Text",
          "diff": {
            "name": "Detached Text",
            "addedCount": 28,
            "removedCount": 0,
            "addedSize": 2464,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              396150,
              396048,
              396144,
              398520,
              396006,
              396024,
              396030,
              396036,
              396042,
              396054,
              396060,
              396066,
              396072,
              396078,
              396084,
              396090,
              396096,
              396102,
              396108,
              396120,
              396126,
              396132,
              396138,
              397170,
              397242,
              401634,
              402012,
              404058
            ],
            "countDelta": 28,
            "sizeDelta": 2464
          },
          "aggregates": {
            "before": {
              "count": 4,
              "distance": -5,
              "self": 352,
              "maxRet": 352,
              "name": "Detached Text",
              "idxs": [
                379908,
                379914,
                386280,
                387138
              ]
            },
            "after": {
              "count": 32,
              "distance": -5,
              "self": 2816,
              "maxRet": 2816,
              "name": "Detached Text",
              "idxs": [
                396012,
                396018,
                396150,
                396048,
                396144,
                398520,
                400380,
                396114,
                396006,
                396024,
                396030,
                396036,
                396042,
                396054,
                396060,
                396066,
                396072,
                396078,
                396084,
                396090,
                396096,
                396102,
                396108,
                396120,
                396126,
                396132,
                396138,
                397170,
                397242,
                401634,
                402012,
                404058
              ]
            }
          },
          "retainedSizeDelta": 2464,
          "retainedSizeDeltaPerIteration": 352,
          "countDelta": 28,
          "countDeltaPerIteration": 4,
          "numIterations": 7
        }
      ],
      "detected": true
    },
    "before": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44650,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45940,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45949,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1311,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 3303776,
        "v8heap": 3265400,
        "native": 38376,
        "code": 1342548,
        "jsArrays": 23648,
        "strings": 418156,
        "system": 238500
      }
    },
    "after": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44650,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45940,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45949,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1311,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 3640012,
        "v8heap": 3576028,
        "native": 63984,
        "code": 1639828,
        "jsArrays": 25356,
        "strings": 418200,
        "system": 238120
      }
    },
    "delta": 336236,
    "deltaPerIteration": 48034,
    "numIterations": 7
  }
},
{
  "test": {
    "data": {
      "href": "/page3",
      "fullHref": "http://localhost:3000/page3"
    },
    "description": "Go to /page3 and back"
  },
  "result": {
    "leaks": {
      "collections": [],
      "eventListeners": [],
      "eventListenersSummary": {
        "before": 139,
        "after": 139,
        "delta": 0,
        "deltaPerIteration": 0
      },
      "domNodes": {
        "delta": 0,
        "deltaPerIteration": 0,
        "nodes": []
      },
      "objects": [
        {
          "name": "Detached <div>",
          "diff": {
            "name": "Detached <div>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              103272,
              102870,
              102918,
              102972,
              103074,
              103206,
              103398
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <div>",
              "idxs": [
                104130
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <div>",
              "idxs": [
                103272,
                104628,
                102870,
                102918,
                102972,
                103074,
                103206,
                103398
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "Detached <h1>",
          "diff": {
            "name": "Detached <h1>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              103230,
              102876,
              102960,
              103026,
              103146,
              103332,
              103356
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <h1>",
              "idxs": [
                104064
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <h1>",
              "idxs": [
                103230,
                104562,
                102876,
                102960,
                103026,
                103146,
                103332,
                103356
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "Detached ElementIntersectionObserverData",
          "diff": {
            "name": "Detached ElementIntersectionObserverData",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 504,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              1560024,
              1560462,
              1560714,
              1560768,
              1562982,
              1568448,
              1568466
            ],
            "countDelta": 7,
            "sizeDelta": 504
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 72,
              "maxRet": 72,
              "name": "Detached ElementIntersectionObserverData",
              "idxs": [
                409722
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 576,
              "maxRet": 576,
              "name": "Detached ElementIntersectionObserverData",
              "idxs": [
                1560270,
                1560024,
                1560462,
                1560714,
                1560768,
                1562982,
                1568448,
                1568466
              ]
            }
          },
          "retainedSizeDelta": 504,
          "retainedSizeDeltaPerIteration": 72,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "FiberNode",
          "diff": {
            "name": "FiberNode",
            "addedCount": 20,
            "removedCount": 13,
            "addedSize": 2640,
            "removedSize": 1716,
            "deletedIndexes": [
              188364,
              233646,
              269838,
              362064,
              362070,
              362076,
              362118,
              362436,
              362442,
              362478,
              362496,
              362502,
              362508
            ],
            "addedIndexes": [
              130842,
              257370,
              919368,
              926766,
              1030446,
              1048536,
              1145772,
              1255854,
              1307190,
              1442622,
              1442922,
              1443186,
              1443216,
              1443246,
              1443252,
              1443282,
              1443288,
              1443318,
              1443354,
              1443918
            ],
            "countDelta": 7,
            "sizeDelta": 924
          },
          "aggregates": {
            "before": {
              "count": 36,
              "distance": 4,
              "self": 4752,
              "maxRet": 14316,
              "name": "FiberNode",
              "idxs": [
                188064,
                188364,
                233646,
                250830,
                250860,
                250878,
                252708,
                252750,
                252792,
                252810,
                253086,
                253308,
                253320,
                253350,
                253362,
                253392,
                253398,
                253770,
                253776,
                253812,
                253824,
                254436,
                254454,
                254502,
                269838,
                269880,
                362064,
                362070,
                362076,
                362118,
                362436,
                362442,
                362478,
                362496,
                362502,
                362508
              ]
            },
            "after": {
              "count": 43,
              "distance": 4,
              "self": 5676,
              "maxRet": 16276,
              "name": "FiberNode",
              "idxs": [
                1255488,
                1253976,
                1254000,
                1254006,
                1255266,
                1255302,
                131100,
                1255344,
                1255464,
                1255536,
                1255548,
                1255578,
                1255590,
                1255620,
                1255626,
                1255716,
                1255722,
                1255752,
                1255764,
                1255800,
                1255818,
                1255872,
                1256322,
                130842,
                257370,
                919368,
                926766,
                1030446,
                1048536,
                1145772,
                1255854,
                1307190,
                1442622,
                1442922,
                1443186,
                1443216,
                1443246,
                1443252,
                1443282,
                1443288,
                1443318,
                1443354,
                1443918
              ]
            }
          },
          "retainedSizeDelta": 1960,
          "retainedSizeDeltaPerIteration": 280,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "HTMLAnchorElement",
          "diff": {
            "name": "HTMLAnchorElement",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 112,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              19446,
              19452,
              19458,
              19464,
              19470,
              19476,
              19482
            ],
            "countDelta": 7,
            "sizeDelta": 112
          },
          "aggregates": {
            "before": {
              "count": 7,
              "distance": 4,
              "self": 1248,
              "maxRet": 2032,
              "name": "HTMLAnchorElement",
              "idxs": [
                19866,
                104076,
                104328,
                255102,
                255288,
                261984,
                262188
              ]
            },
            "after": {
              "count": 14,
              "distance": 4,
              "self": 1360,
              "maxRet": 2144,
              "name": "HTMLAnchorElement",
              "idxs": [
                19908,
                104574,
                104826,
                130356,
                676842,
                130308,
                426546,
                19446,
                19452,
                19458,
                19464,
                19470,
                19476,
                19482
              ]
            }
          },
          "retainedSizeDelta": 112,
          "retainedSizeDeltaPerIteration": 16,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "LayoutShift",
          "diff": {
            "name": "LayoutShift",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 952,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              1559952,
              1559964,
              1559988,
              1560006,
              1560546,
              1568580,
              1568640
            ],
            "countDelta": 7,
            "sizeDelta": 952
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": 7,
              "self": 136,
              "maxRet": 288,
              "name": "LayoutShift",
              "idxs": [
                409362
              ]
            },
            "after": {
              "count": 8,
              "distance": 7,
              "self": 1088,
              "maxRet": 2304,
              "name": "LayoutShift",
              "idxs": [
                1559976,
                1559952,
                1559964,
                1559988,
                1560006,
                1560546,
                1568580,
                1568640
              ]
            }
          },
          "retainedSizeDelta": 2016,
          "retainedSizeDeltaPerIteration": 288,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "LayoutShiftAttribution",
          "diff": {
            "name": "LayoutShiftAttribution",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 280,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              1559958,
              1559970,
              1559994,
              1560012,
              1560552,
              1565142,
              1568418
            ],
            "countDelta": 7,
            "sizeDelta": 280
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": 8,
              "self": 40,
              "maxRet": 152,
              "name": "LayoutShiftAttribution",
              "idxs": [
                410400
              ]
            },
            "after": {
              "count": 8,
              "distance": 8,
              "self": 320,
              "maxRet": 1216,
              "name": "LayoutShiftAttribution",
              "idxs": [
                1559982,
                1559958,
                1559970,
                1559994,
                1560012,
                1560552,
                1565142,
                1568418
              ]
            }
          },
          "retainedSizeDelta": 1064,
          "retainedSizeDeltaPerIteration": 152,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "DOMRectReadOnly",
          "diff": {
            "name": "DOMRectReadOnly",
            "addedCount": 14,
            "removedCount": 0,
            "addedSize": 784,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              1561152,
              1561158,
              1561578,
              1561584,
              1564224,
              1564230,
              1565148,
              1565154,
              1565514,
              1565520,
              1565946,
              1565952,
              1568424,
              1568430
            ],
            "countDelta": 14,
            "sizeDelta": 784
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": 6,
              "self": 460,
              "maxRet": 500,
              "name": "DOMRectReadOnly",
              "idxs": [
                264642,
                415938,
                415944
              ]
            },
            "after": {
              "count": 17,
              "distance": 6,
              "self": 1244,
              "maxRet": 1284,
              "name": "DOMRectReadOnly",
              "idxs": [
                1568646,
                1568652,
                1561152,
                1561158,
                1561578,
                1561584,
                1564224,
                1564230,
                1565148,
                1565154,
                1565514,
                1565520,
                1565946,
                1565952,
                1568424,
                1568430,
                610386
              ]
            }
          },
          "retainedSizeDelta": 784,
          "retainedSizeDeltaPerIteration": 112,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "Object",
          "diff": {
            "name": "Object",
            "addedCount": 17,
            "removedCount": 3,
            "addedSize": 408,
            "removedSize": 84,
            "deletedIndexes": [
              187644,
              269748,
              375990
            ],
            "addedIndexes": [
              131034,
              642486,
              642762,
              643644,
              643782,
              643794,
              644004,
              644328,
              644652,
              914730,
              916014,
              916032,
              916404,
              916638,
              917748,
              1255374,
              1442880
            ],
            "countDelta": 14,
            "sizeDelta": 324
          },
          "aggregates": {
            "before": {
              "count": 496,
              "distance": 2,
              "self": 135728,
              "maxRet": 467396,
              "name": "Object",
              "idxs": [
                104046,
                132546,
                187644,
                188100,
                189864,
                203724,
                204924,
                204966,
                204978,
                205020,
                205176,
                205194,
                205206,
                205224,
                205242,
                205254,
                205338,
                224670,
                224682,
                224688,
                224694,
                224700,
                224718,
                224724,
                224730,
                228192,
                228198,
                228246,
                228252,
                230202,
                230208,
                230256,
                230268,
                231684,
                231708,
                231714,
                231768,
                231774,
                233202,
                233934,
                234144,
                234216,
                234222,
                234336,
                234348,
                234468,
                234702,
                234714,
                234864,
                234948,
                234960,
                235062,
                235086,
                235314,
                235368,
                235596,
                235632,
                235644,
                235764,
                235872,
                235944,
                236244,
                236292,
                236538,
                236544,
                236604,
                236928,
                237000,
                237090,
                237102,
                237300,
                237462,
                237618,
                237666,
                237750,
                237930,
                237954,
                237996,
                238044,
                238056,
                238206,
                238212,
                238470,
                238482,
                238500,
                238596,
                238854,
                238878,
                238884,
                239922,
                239994,
                240066,
                240090,
                240240,
                240252,
                240336,
                242664,
                243462,
                243534,
                243582,
                243594,
                243708,
                243768,
                243804,
                244116,
                244122,
                244194,
                244410,
                244416,
                244524,
                244590,
                244914,
                244926,
                245172,
                245298,
                245346,
                246438,
                246498,
                249798,
                250866,
                250872,
                250956,
                251418,
                251442,
                251448,
                251454,
                251538,
                251544,
                251550,
                251634,
                251640,
                251646,
                251736,
                251742,
                251748,
                251832,
                251838,
                251844,
                251922,
                251928,
                251934,
                252018,
                252024,
                252030,
                252114,
                252120,
                252126,
                252216,
                252222,
                252228,
                252318,
                252324,
                252330,
                252420,
                252426,
                252432,
                252888,
                253290,
                253518,
                253572,
                253626,
                253674,
                256698,
                269748,
                270204,
                281100,
                288924,
                289170,
                289260,
                289308,
                289734,
                289800,
                289842,
                289950,
                290040,
                290106,
                290298,
                290418,
                290868,
                290892,
                291096,
                291150,
                291180,
                291252,
                291258,
                291264,
                291342,
                291348,
                291354,
                291438,
                291444,
                291450,
                291534,
                291540,
                291546,
                291630,
                291636,
                291642,
                291726,
                291732,
                291738,
                291822,
                291828,
                291834,
                291918,
                291924,
                291930,
                292008,
                292014,
                292020,
                292104,
                292110,
                292116,
                292194,
                292200,
                292206,
                292290,
                292296,
                292302,
                292380,
                292386,
                292392,
                292476,
                292482,
                292488,
                292572,
                292578,
                292584,
                292668,
                292674,
                292680,
                292764,
                292770,
                292776,
                292854,
                292860,
                292866,
                292950,
                292956,
                292962,
                293046,
                293052,
                293058,
                293142,
                293148,
                293154,
                293232,
                293238,
                293244,
                293322,
                293328,
                293334,
                293418,
                293424,
                293430,
                293514,
                293520,
                293526,
                293610,
                293616,
                293622,
                293700,
                293706,
                293712,
                293796,
                293802,
                293808,
                293892,
                293898,
                293904,
                293988,
                293994,
                294000,
                294084,
                294090,
                294096,
                294174,
                294180,
                294186,
                294270,
                294276,
                294282,
                294360,
                294366,
                294372,
                294456,
                294462,
                294468,
                294552,
                294558,
                294564,
                294642,
                294648,
                294654,
                294738,
                294744,
                294750,
                294834,
                294840,
                294846,
                294930,
                294936,
                294942,
                295026,
                295032,
                295038,
                295116,
                295122,
                295128,
                295212,
                295218,
                295224,
                295308,
                295314,
                295320,
                295404,
                295410,
                295416,
                295500,
                295506,
                295512,
                295590,
                295596,
                295602,
                295686,
                295692,
                295698,
                295776,
                295782,
                295788,
                295866,
                295872,
                295878,
                295962,
                295968,
                295974,
                296052,
                296058,
                296064,
                296142,
                296148,
                296154,
                296238,
                296244,
                296250,
                296328,
                296334,
                296340,
                296424,
                296430,
                296436,
                296538,
                296544,
                296550,
                296634,
                296640,
                296646,
                296724,
                296730,
                296736,
                296820,
                296826,
                296832,
                296916,
                296922,
                296928,
                297006,
                297012,
                297018,
                297096,
                297102,
                297108,
                297210,
                297216,
                297222,
                297300,
                297306,
                297312,
                297396,
                297402,
                297408,
                297492,
                297498,
                297504,
                297600,
                297612,
                297618,
                297624,
                297702,
                297708,
                297714,
                297798,
                297804,
                297810,
                297894,
                297900,
                297906,
                297984,
                297990,
                297996,
                298092,
                298098,
                298104,
                298188,
                298194,
                298200,
                298284,
                298290,
                298296,
                298380,
                298386,
                298392,
                298470,
                298476,
                298482,
                298566,
                298572,
                298578,
                298656,
                298662,
                298668,
                298752,
                298758,
                298764,
                298848,
                298854,
                298860,
                298944,
                298950,
                298956,
                299034,
                299040,
                299046,
                299130,
                299136,
                299142,
                299226,
                299232,
                299238,
                299322,
                299328,
                299334,
                299412,
                299418,
                299424,
                299502,
                299508,
                299514,
                299598,
                299604,
                299610,
                299694,
                299700,
                299706,
                299784,
                299790,
                299796,
                299880,
                299886,
                299892,
                300186,
                300192,
                300204,
                300216,
                300222,
                300432,
                300450,
                300468,
                300594,
                300846,
                300966,
                300990,
                301098,
                301134,
                301248,
                321366,
                338610,
                375990,
                376878,
                377052,
                377058,
                377064,
                377070,
                377166,
                377172,
                377178,
                377334,
                377340,
                377346,
                377412,
                378864,
                378912,
                379044,
                379068,
                380838,
                382140
              ]
            },
            "after": {
              "count": 510,
              "distance": 2,
              "self": 136052,
              "maxRet": 470528,
              "name": "Object",
              "idxs": [
                104544,
                259170,
                130752,
                207726,
                222552,
                223920,
                223962,
                223974,
                224016,
                224172,
                224190,
                224202,
                224220,
                224238,
                224250,
                224334,
                247974,
                247986,
                247992,
                247998,
                248004,
                248022,
                248028,
                248034,
                251634,
                251640,
                251688,
                251694,
                253644,
                253650,
                253698,
                253710,
                255324,
                255354,
                255360,
                255420,
                255426,
                256896,
                257688,
                257928,
                258012,
                258018,
                258144,
                258156,
                258288,
                258570,
                258594,
                258762,
                258864,
                258876,
                258996,
                259020,
                259308,
                259374,
                259638,
                259674,
                259692,
                259824,
                259950,
                260040,
                260388,
                260460,
                260766,
                260772,
                260850,
                261210,
                261282,
                261408,
                261420,
                261642,
                261846,
                262020,
                262074,
                262158,
                262374,
                262398,
                262440,
                262500,
                262512,
                262710,
                262716,
                263010,
                263022,
                263046,
                263166,
                263478,
                263508,
                263520,
                264618,
                264690,
                264762,
                264786,
                264936,
                264948,
                265038,
                269928,
                912870,
                912540,
                912036,
                912984,
                275166,
                912528,
                911910,
                912174,
                912912,
                912702,
                912342,
                912612,
                911718,
                912960,
                912600,
                912354,
                913038,
                912042,
                912096,
                911706,
                911874,
                681144,
                912456,
                912264,
                913032,
                911754,
                912198,
                911904,
                913080,
                912828,
                912150,
                912822,
                911748,
                912480,
                911730,
                912972,
                912474,
                913026,
                911952,
                912462,
                911808,
                912636,
                912432,
                912678,
                912498,
                911880,
                912108,
                912156,
                912114,
                912312,
                911964,
                913068,
                912084,
                912732,
                912180,
                912390,
                913014,
                913062,
                912360,
                676824,
                912318,
                912738,
                912654,
                913086,
                912294,
                678594,
                1256364,
                1266432,
                274254,
                274506,
                274596,
                274644,
                275076,
                275142,
                275190,
                275298,
                275388,
                275454,
                275646,
                275766,
                276228,
                276258,
                276468,
                276522,
                276552,
                276636,
                276642,
                276648,
                276732,
                276738,
                276744,
                276828,
                276834,
                276840,
                276924,
                276930,
                276936,
                277026,
                277032,
                277038,
                277122,
                277128,
                277134,
                277218,
                277224,
                277230,
                277314,
                277320,
                277326,
                277404,
                277410,
                277416,
                277500,
                277506,
                277512,
                277590,
                277596,
                277602,
                277686,
                277692,
                277698,
                277776,
                277782,
                277788,
                277872,
                277878,
                277884,
                277968,
                277974,
                277980,
                278064,
                278070,
                278076,
                278160,
                278166,
                278172,
                278250,
                278256,
                278262,
                278346,
                278352,
                278358,
                278442,
                278448,
                278454,
                278538,
                278544,
                278550,
                278628,
                278634,
                278640,
                278718,
                278724,
                278730,
                278814,
                278820,
                278826,
                278910,
                278916,
                278922,
                279006,
                279012,
                279018,
                279096,
                279102,
                279108,
                279192,
                279198,
                279204,
                279288,
                279294,
                279300,
                279384,
                279390,
                279396,
                279480,
                279486,
                279492,
                279570,
                279576,
                279582,
                279666,
                279672,
                279678,
                279756,
                279762,
                279768,
                279852,
                279858,
                279864,
                279948,
                279954,
                279960,
                280038,
                280044,
                280050,
                280134,
                280140,
                280146,
                280230,
                280236,
                280242,
                280326,
                280332,
                280338,
                280422,
                280428,
                280434,
                280512,
                280518,
                280524,
                280608,
                280614,
                280620,
                280704,
                280710,
                280716,
                280800,
                280806,
                280812,
                280896,
                280902,
                280908,
                280986,
                280992,
                280998,
                281082,
                281088,
                281094,
                281172,
                281178,
                281184,
                281262,
                281268,
                281274,
                281358,
                281364,
                281370,
                281448,
                281454,
                281460,
                281538,
                281544,
                281550,
                281634,
                281640,
                281646,
                281724,
                281730,
                281736,
                281820,
                281826,
                281832,
                281934,
                281940,
                281946,
                282030,
                282036,
                282042,
                282120,
                282126,
                282132,
                282216,
                282222,
                282228,
                282360,
                282366,
                282372,
                282456,
                282462,
                282468,
                282546,
                282552,
                282558,
                282660,
                282666,
                282672,
                282750,
                282756,
                282762,
                282846,
                282852,
                282858,
                282942,
                282948,
                282954,
                283050,
                283062,
                283068,
                283074,
                283152,
                283158,
                283164,
                283248,
                283254,
                283260,
                283344,
                283350,
                283356,
                283440,
                283446,
                283452,
                283548,
                283554,
                283560,
                283650,
                283656,
                283662,
                283746,
                283752,
                283758,
                283842,
                283848,
                283854,
                283932,
                283938,
                283944,
                284028,
                284034,
                284040,
                284118,
                284124,
                284130,
                284214,
                284220,
                284226,
                284310,
                284316,
                284322,
                284412,
                284418,
                284424,
                284502,
                284508,
                284514,
                284598,
                284604,
                284610,
                284694,
                284700,
                284706,
                284790,
                284796,
                284802,
                284880,
                284886,
                284892,
                284976,
                284982,
                284988,
                285072,
                285078,
                285084,
                285168,
                285174,
                285180,
                285258,
                285264,
                285270,
                285354,
                285360,
                285366,
                285798,
                285804,
                285816,
                285828,
                285834,
                286134,
                286152,
                286170,
                286296,
                286584,
                286740,
                286770,
                286896,
                286932,
                287052,
                405432,
                422946,
                678252,
                678528,
                678534,
                678540,
                678546,
                678672,
                678678,
                678684,
                678780,
                678786,
                678792,
                678876,
                682026,
                682092,
                682326,
                682350,
                1527996,
                1528950,
                131034,
                642486,
                642762,
                643644,
                643782,
                643794,
                644004,
                644328,
                644652,
                914730,
                916014,
                916032,
                916404,
                916638,
                917748,
                1255374,
                1442880
              ]
            }
          },
          "retainedSizeDelta": 3132,
          "retainedSizeDeltaPerIteration": 447,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "system / Context",
          "diff": {
            "name": "system / Context",
            "addedCount": 25,
            "removedCount": 11,
            "addedSize": 704,
            "removedSize": 424,
            "deletedIndexes": [
              187782,
              269310,
              362394,
              362772,
              362880,
              362904,
              363348,
              363456,
              363480,
              372078,
              372144
            ],
            "addedIndexes": [
              130434,
              131208,
              149244,
              149262,
              149394,
              149400,
              149406,
              149418,
              149424,
              149484,
              149508,
              149520,
              161046,
              161058,
              868644,
              1442682,
              1443540,
              1443648,
              1443672,
              1444104,
              1444212,
              1444236,
              1444662,
              1444770,
              1444794
            ],
            "countDelta": 14,
            "sizeDelta": 280
          },
          "aggregates": {
            "before": {
              "count": 436,
              "distance": 3,
              "self": 20260,
              "maxRet": 330296,
              "name": "system / Context",
              "idxs": [
                130050,
                132570,
                132972,
                187062,
                187152,
                187182,
                187272,
                187782,
                187806,
                188136,
                188436,
                188454,
                188610,
                188658,
                188784,
                188952,
                189432,
                190194,
                190488,
                190500,
                190524,
                190542,
                190560,
                190578,
                190596,
                190614,
                190632,
                190650,
                190668,
                190686,
                190704,
                190722,
                190740,
                190758,
                190776,
                190794,
                190812,
                190830,
                190848,
                190866,
                190884,
                190896,
                190914,
                192462,
                192474,
                192564,
                192582,
                192600,
                192618,
                192636,
                192654,
                192672,
                192690,
                192708,
                192726,
                192744,
                192762,
                192780,
                192798,
                192816,
                192834,
                192852,
                192870,
                192888,
                192906,
                192924,
                192936,
                199500,
                199632,
                203490,
                204084,
                204102,
                204120,
                204138,
                204156,
                204174,
                204192,
                204210,
                204228,
                204246,
                204264,
                204282,
                204300,
                204318,
                204336,
                204354,
                204372,
                204390,
                204408,
                204426,
                204444,
                204462,
                204480,
                204498,
                204516,
                204534,
                204552,
                204570,
                204588,
                204606,
                204624,
                204636,
                204654,
                204672,
                204690,
                204708,
                204726,
                204744,
                204762,
                204780,
                204798,
                204816,
                204834,
                204852,
                204918,
                205050,
                205068,
                205086,
                205104,
                205122,
                205140,
                205158,
                205266,
                205284,
                205302,
                205320,
                205356,
                205374,
                205392,
                205410,
                205428,
                205458,
                212052,
                220896,
                221610,
                224760,
                224778,
                224856,
                227094,
                227112,
                227118,
                227130,
                227136,
                227148,
                227160,
                227172,
                227184,
                227196,
                227208,
                227304,
                227322,
                227334,
                227340,
                227352,
                227412,
                227424,
                227430,
                227442,
                227454,
                227466,
                227478,
                227490,
                227502,
                227514,
                227526,
                227538,
                227550,
                227562,
                227574,
                227586,
                227592,
                227718,
                227730,
                227736,
                227748,
                227760,
                227772,
                227784,
                227796,
                227886,
                227898,
                227946,
                227952,
                227988,
                228000,
                228006,
                229080,
                229092,
                229104,
                229116,
                229122,
                229134,
                229146,
                229158,
                229170,
                229182,
                229194,
                229296,
                229314,
                229326,
                229332,
                229344,
                229410,
                229422,
                229428,
                229440,
                229452,
                229464,
                229476,
                229488,
                229500,
                229512,
                229524,
                229536,
                229548,
                229560,
                229572,
                229584,
                229590,
                229716,
                229728,
                229734,
                229746,
                229758,
                229770,
                229782,
                229794,
                229884,
                229896,
                229944,
                229950,
                229992,
                230004,
                230010,
                231660,
                231678,
                231702,
                238872,
                238914,
                239868,
                240270,
                242472,
                242490,
                242508,
                242520,
                242532,
                242544,
                242556,
                242568,
                242586,
                242604,
                242616,
                242628,
                242640,
                243390,
                243414,
                243696,
                243738,
                243792,
                243816,
                243858,
                243870,
                243882,
                244242,
                244248,
                244266,
                244698,
                244704,
                244710,
                244716,
                244722,
                244728,
                244734,
                244740,
                244758,
                246762,
                246768,
                246774,
                246780,
                246786,
                246792,
                246798,
                246804,
                246810,
                246816,
                246822,
                246828,
                246834,
                246840,
                246846,
                246852,
                246858,
                246864,
                246882,
                246888,
                246894,
                246900,
                246906,
                246912,
                246918,
                246924,
                246930,
                246936,
                246942,
                246948,
                246954,
                246960,
                246966,
                246972,
                246978,
                246984,
                246990,
                246996,
                247002,
                247020,
                247038,
                248346,
                248352,
                252522,
                252540,
                252546,
                252564,
                252570,
                252588,
                252594,
                252612,
                252618,
                252624,
                252630,
                252636,
                252642,
                252660,
                252666,
                252672,
                252948,
                252972,
                269310,
                269922,
                287358,
                288126,
                288132,
                288138,
                288210,
                288228,
                288240,
                290862,
                290880,
                291108,
                291186,
                291246,
                299976,
                299982,
                299988,
                299994,
                300000,
                300006,
                300012,
                300018,
                300024,
                300030,
                300036,
                300042,
                300048,
                300054,
                300060,
                300066,
                300072,
                300078,
                300084,
                300090,
                300414,
                300648,
                300660,
                300834,
                300882,
                300900,
                301086,
                301092,
                301608,
                301674,
                301698,
                301722,
                301794,
                301812,
                301818,
                301830,
                301836,
                301842,
                302016,
                314880,
                314886,
                315180,
                315186,
                315192,
                315198,
                316728,
                316734,
                316740,
                316746,
                316752,
                316842,
                316848,
                316854,
                316866,
                316890,
                316896,
                316914,
                316962,
                317040,
                320238,
                343716,
                362394,
                362772,
                362880,
                362904,
                363348,
                363456,
                363480,
                372078,
                372144,
                376302,
                376308,
                376314,
                376320,
                376326,
                376332,
                376338,
                376344,
                376350,
                376356,
                376362,
                376368,
                376374,
                376890,
                377160,
                377454
              ]
            },
            "after": {
              "count": 450,
              "distance": 3,
              "self": 20540,
              "maxRet": 4777988,
              "name": "system / Context",
              "idxs": [
                222300,
                287934,
                287826,
                204474,
                204582,
                204618,
                204726,
                131370,
                205902,
                130962,
                160986,
                206442,
                206490,
                206628,
                206808,
                207294,
                208056,
                208356,
                208368,
                208404,
                208446,
                208464,
                208482,
                208500,
                208518,
                208536,
                208554,
                208572,
                208590,
                208608,
                208626,
                208644,
                208662,
                208680,
                208698,
                208716,
                208734,
                208752,
                208770,
                208788,
                208800,
                208824,
                210378,
                210390,
                210480,
                210498,
                210516,
                210534,
                210552,
                210570,
                210588,
                210606,
                210624,
                210642,
                210660,
                210678,
                210696,
                210714,
                210732,
                210750,
                210768,
                210786,
                210804,
                210822,
                210840,
                210852,
                218226,
                218364,
                222282,
                223074,
                223098,
                223116,
                223134,
                223152,
                223170,
                223188,
                223206,
                223224,
                223242,
                223260,
                223278,
                223296,
                223314,
                223332,
                223350,
                223368,
                223386,
                223404,
                223422,
                223440,
                223458,
                223476,
                223494,
                223512,
                223530,
                223548,
                223566,
                223584,
                223602,
                223620,
                223632,
                223650,
                223668,
                223686,
                223704,
                223722,
                223740,
                223758,
                223776,
                223794,
                223812,
                223830,
                223848,
                223914,
                224046,
                224064,
                224082,
                224100,
                224118,
                224136,
                224154,
                224262,
                224280,
                224298,
                224316,
                224352,
                224370,
                224388,
                224406,
                224424,
                224454,
                233142,
                242322,
                243060,
                248076,
                248094,
                248172,
                250536,
                250554,
                250560,
                250572,
                250578,
                250590,
                250602,
                250614,
                250626,
                250638,
                250650,
                250746,
                250764,
                250776,
                250782,
                250794,
                250854,
                250866,
                250872,
                250884,
                250896,
                250908,
                250920,
                250932,
                250944,
                250956,
                250968,
                250980,
                250992,
                251004,
                251016,
                251028,
                251034,
                251160,
                251172,
                251178,
                251190,
                251202,
                251214,
                251226,
                251238,
                251328,
                251340,
                251388,
                251394,
                251430,
                251442,
                251448,
                252522,
                252534,
                252546,
                252558,
                252564,
                252576,
                252588,
                252600,
                252612,
                252624,
                252636,
                252738,
                252756,
                252768,
                252774,
                252786,
                252852,
                252864,
                252870,
                252882,
                252894,
                252906,
                252918,
                252930,
                252942,
                252954,
                252966,
                252978,
                252990,
                253002,
                253014,
                253026,
                253032,
                253158,
                253170,
                253176,
                253188,
                253200,
                253212,
                253224,
                253236,
                253326,
                253338,
                253386,
                253392,
                253434,
                253446,
                253452,
                255300,
                255318,
                255348,
                263502,
                263568,
                264564,
                264966,
                269322,
                269340,
                269364,
                269376,
                269388,
                269400,
                269412,
                269424,
                269448,
                269466,
                269478,
                269490,
                269502,
                1249662,
                1249680,
                1249848,
                1249884,
                1249908,
                1249926,
                1249968,
                1249980,
                1249992,
                1250268,
                1250274,
                1250298,
                1250610,
                1250616,
                1250622,
                1250628,
                1250634,
                1250640,
                1250646,
                1250652,
                1250664,
                1251522,
                1251528,
                1251534,
                1251540,
                1251546,
                1251552,
                1251558,
                1251564,
                1251570,
                1251576,
                1251582,
                1251588,
                1251594,
                1251600,
                1251606,
                1251612,
                1251618,
                1251624,
                1251630,
                1251636,
                1251642,
                1251648,
                1251654,
                1251660,
                1251666,
                1251672,
                1251678,
                1251684,
                1251690,
                1251696,
                1251702,
                1251708,
                1251714,
                1251720,
                1251726,
                1251732,
                1251738,
                1251744,
                1251750,
                1251756,
                1251762,
                1251840,
                1251846,
                1255098,
                1255116,
                1255122,
                1255140,
                1255146,
                1255164,
                1255170,
                1255188,
                1255194,
                1255200,
                1255206,
                1255212,
                1255218,
                1255236,
                1255242,
                1255248,
                1255386,
                1255398,
                131322,
                1272318,
                1273026,
                1273032,
                1273038,
                1273092,
                1273104,
                1273110,
                276222,
                276246,
                276480,
                276564,
                276630,
                285462,
                285576,
                285582,
                285588,
                285594,
                285600,
                285606,
                285612,
                285618,
                285624,
                285630,
                285636,
                285642,
                285648,
                285654,
                285660,
                285666,
                285672,
                285678,
                285684,
                286110,
                286362,
                286380,
                286554,
                286620,
                286644,
                286872,
                286884,
                287502,
                287592,
                287628,
                287664,
                287778,
                287802,
                287808,
                287850,
                287862,
                287874,
                288126,
                312678,
                312690,
                313104,
                313116,
                313128,
                313140,
                314700,
                314712,
                314724,
                314736,
                314748,
                314874,
                314886,
                314898,
                314946,
                315006,
                315018,
                315096,
                315216,
                315318,
                402798,
                428772,
                677808,
                677814,
                677820,
                677826,
                677832,
                677838,
                677844,
                677850,
                677856,
                677862,
                677868,
                677874,
                677886,
                678264,
                678666,
                678918,
                130434,
                131208,
                149244,
                149262,
                149394,
                149400,
                149406,
                149418,
                149424,
                149484,
                149508,
                149520,
                161046,
                161058,
                868644,
                1442682,
                1443540,
                1443648,
                1443672,
                1444104,
                1444212,
                1444236,
                1444662,
                1444770,
                1444794
              ]
            }
          },
          "retainedSizeDelta": 4447692,
          "retainedSizeDeltaPerIteration": 635385,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "DOMTimer",
          "diff": {
            "name": "DOMTimer",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 4032,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              1560048,
              1560072,
              1560084,
              1560096,
              1560126,
              1560138,
              1560150,
              1560162,
              1560180,
              1560186,
              1560192,
              1560198,
              1560204,
              1560210,
              1560216,
              1560222,
              1560228,
              1560234,
              1560240,
              1560246,
              1560252
            ],
            "countDelta": 21,
            "sizeDelta": 4032
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": 6,
              "self": 576,
              "maxRet": 948,
              "name": "DOMTimer",
              "idxs": [
                409680,
                409698,
                409704
              ]
            },
            "after": {
              "count": 24,
              "distance": 6,
              "self": 4608,
              "maxRet": 7584,
              "name": "DOMTimer",
              "idxs": [
                1560036,
                1560060,
                1560114,
                1560048,
                1560072,
                1560084,
                1560096,
                1560126,
                1560138,
                1560150,
                1560162,
                1560180,
                1560186,
                1560192,
                1560198,
                1560204,
                1560210,
                1560216,
                1560222,
                1560228,
                1560234,
                1560240,
                1560246,
                1560252
              ]
            }
          },
          "retainedSizeDelta": 6636,
          "retainedSizeDeltaPerIteration": 948,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached <a>",
          "diff": {
            "name": "Detached <a>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 6216,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              103236,
              103248,
              103260,
              102882,
              102894,
              102906,
              102930,
              102942,
              102954,
              102984,
              102996,
              103020,
              103086,
              103110,
              103140,
              103290,
              103302,
              103314,
              103362,
              103374,
              103386
            ],
            "countDelta": 21,
            "sizeDelta": 6216
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 888,
              "maxRet": 888,
              "name": "Detached <a>",
              "idxs": [
                104082,
                104106,
                104118
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 7104,
              "maxRet": 7104,
              "name": "Detached <a>",
              "idxs": [
                103236,
                103248,
                103260,
                104580,
                104604,
                104616,
                102882,
                102894,
                102906,
                102930,
                102942,
                102954,
                102984,
                102996,
                103020,
                103086,
                103110,
                103140,
                103290,
                103302,
                103314,
                103362,
                103374,
                103386
              ]
            }
          },
          "retainedSizeDelta": 6216,
          "retainedSizeDeltaPerIteration": 888,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached <p>",
          "diff": {
            "name": "Detached <p>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 5376,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              103242,
              103254,
              103266,
              102888,
              102900,
              102912,
              102924,
              102936,
              102948,
              102978,
              102990,
              103002,
              103080,
              103092,
              103134,
              103212,
              103296,
              103308,
              103368,
              103380,
              103392
            ],
            "countDelta": 21,
            "sizeDelta": 5376
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached <p>",
              "idxs": [
                104100,
                104112,
                104124
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 6144,
              "maxRet": 6144,
              "name": "Detached <p>",
              "idxs": [
                103242,
                103254,
                103266,
                104598,
                104610,
                104622,
                102888,
                102900,
                102912,
                102924,
                102936,
                102948,
                102978,
                102990,
                103002,
                103080,
                103092,
                103134,
                103212,
                103296,
                103308,
                103368,
                103380,
                103392
              ]
            }
          },
          "retainedSizeDelta": 5376,
          "retainedSizeDeltaPerIteration": 768,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached DOMTokenList",
          "diff": {
            "name": "Detached DOMTokenList",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1176,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              1565454,
              1565616,
              1568532,
              1560624,
              1560702,
              1560786,
              1561080,
              1562190,
              1564326,
              1565166,
              1565430,
              1565436,
              1565958,
              1566000,
              1567302,
              1567998,
              1568112,
              1568352,
              1568388,
              1568490,
              1568604
            ],
            "countDelta": 21,
            "sizeDelta": 1176
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 168,
              "maxRet": 168,
              "name": "Detached DOMTokenList",
              "idxs": [
                410796,
                410820,
                414744
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1344,
              "maxRet": 1344,
              "name": "Detached DOMTokenList",
              "idxs": [
                1561518,
                1561542,
                1565454,
                1565112,
                1565616,
                1568532,
                1560624,
                1560702,
                1560786,
                1561080,
                1562190,
                1564326,
                1565166,
                1565430,
                1565436,
                1565958,
                1566000,
                1567302,
                1567998,
                1568112,
                1568352,
                1568388,
                1568490,
                1568604
              ]
            }
          },
          "retainedSizeDelta": 1176,
          "retainedSizeDeltaPerIteration": 168,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached EventListener",
          "diff": {
            "name": "Detached EventListener",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1512,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              1566240,
              1565598,
              1566234,
              1561440,
              1564392,
              1564998,
              1565826,
              1566036,
              1566102,
              1566120,
              1566132,
              1566144,
              1566156,
              1566186,
              1566198,
              1566222,
              1566774,
              1566798,
              1568160,
              1568358,
              1568556
            ],
            "countDelta": 21,
            "sizeDelta": 1512
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 216,
              "maxRet": 216,
              "name": "Detached EventListener",
              "idxs": [
                410508,
                414846,
                416256
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1728,
              "maxRet": 1728,
              "name": "Detached EventListener",
              "idxs": [
                1562214,
                1566240,
                1565598,
                1566234,
                1566318,
                1567056,
                1561440,
                1564392,
                1564998,
                1565826,
                1566036,
                1566102,
                1566120,
                1566132,
                1566144,
                1566156,
                1566186,
                1566198,
                1566222,
                1566774,
                1566798,
                1568160,
                1568358,
                1568556
              ]
            }
          },
          "retainedSizeDelta": 1512,
          "retainedSizeDeltaPerIteration": 216,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached V8EventHandlerNonNull",
          "diff": {
            "name": "Detached V8EventHandlerNonNull",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 672,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              1561314,
              1561368,
              1566246,
              1560570,
              1560900,
              1560918,
              1561098,
              1561446,
              1561548,
              1562136,
              1562166,
              1562196,
              1562220,
              1563648,
              1565214,
              1565478,
              1565700,
              1566042,
              1566150,
              1566204,
              1566780
            ],
            "countDelta": 21,
            "sizeDelta": 672
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 96,
              "maxRet": 96,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                410514,
                410778,
                414852
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                1561536,
                1561314,
                1561506,
                1561368,
                1566246,
                1566324,
                1560570,
                1560900,
                1560918,
                1561098,
                1561446,
                1561548,
                1562136,
                1562166,
                1562196,
                1562220,
                1563648,
                1565214,
                1565478,
                1565700,
                1566042,
                1566150,
                1566204,
                1566780
              ]
            }
          },
          "retainedSizeDelta": 672,
          "retainedSizeDeltaPerIteration": 96,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "ScheduledAction",
          "diff": {
            "name": "ScheduledAction",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1176,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              1560054,
              1560078,
              1560090,
              1560102,
              1560132,
              1560144,
              1560156,
              1560168,
              1560426,
              1560672,
              1560678,
              1560996,
              1561176,
              1561230,
              1564122,
              1564206,
              1565064,
              1565238,
              1565580,
              1566060,
              1566258
            ],
            "countDelta": 21,
            "sizeDelta": 1176
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": 7,
              "self": 168,
              "maxRet": 372,
              "name": "ScheduledAction",
              "idxs": [
                409686,
                410634,
                413448
              ]
            },
            "after": {
              "count": 24,
              "distance": 7,
              "self": 1344,
              "maxRet": 2976,
              "name": "ScheduledAction",
              "idxs": [
                1560042,
                1560066,
                1560120,
                1560054,
                1560078,
                1560090,
                1560102,
                1560132,
                1560144,
                1560156,
                1560168,
                1560426,
                1560672,
                1560678,
                1560996,
                1561176,
                1561230,
                1564122,
                1564206,
                1565064,
                1565238,
                1565580,
                1566060,
                1566258
              ]
            }
          },
          "retainedSizeDelta": 2604,
          "retainedSizeDeltaPerIteration": 372,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "V8Function",
          "diff": {
            "name": "V8Function",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 840,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              1560990,
              1561008,
              1561014,
              1561110,
              1561128,
              1561164,
              1561188,
              1561242,
              1561428,
              1561434,
              1561482,
              1561632,
              1561644,
              1561890,
              1562076,
              1564218,
              1564308,
              1565592,
              1566066,
              1566084,
              1567542
            ],
            "countDelta": 21,
            "sizeDelta": 840
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": 8,
              "self": 120,
              "maxRet": 204,
              "name": "V8Function",
              "idxs": [
                410454,
                410646,
                413460
              ]
            },
            "after": {
              "count": 24,
              "distance": 8,
              "self": 960,
              "maxRet": 1632,
              "name": "V8Function",
              "idxs": [
                1560654,
                1561416,
                1566072,
                1560990,
                1561008,
                1561014,
                1561110,
                1561128,
                1561164,
                1561188,
                1561242,
                1561428,
                1561434,
                1561482,
                1561632,
                1561644,
                1561890,
                1562076,
                1564218,
                1564308,
                1565592,
                1566066,
                1566084,
                1567542
              ]
            }
          },
          "retainedSizeDelta": 1428,
          "retainedSizeDeltaPerIteration": 204,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached Text",
          "diff": {
            "name": "Detached Text",
            "addedCount": 28,
            "removedCount": 0,
            "addedSize": 2464,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              1559454,
              1559418,
              1559472,
              1559478,
              1559394,
              1559406,
              1559412,
              1559424,
              1559436,
              1559448,
              1559460,
              1559466,
              1560450,
              1560510,
              1564578,
              1565442,
              1565688,
              1565814,
              1566138,
              1566192,
              1566564,
              1566786,
              1567446,
              1567584,
              1568226,
              1568364,
              1568376,
              1568586
            ],
            "countDelta": 28,
            "sizeDelta": 2464
          },
          "aggregates": {
            "before": {
              "count": 4,
              "distance": -5,
              "self": 352,
              "maxRet": 352,
              "name": "Detached Text",
              "idxs": [
                409248,
                413430,
                413922,
                414750
              ]
            },
            "after": {
              "count": 32,
              "distance": -5,
              "self": 2816,
              "maxRet": 2816,
              "name": "Detached Text",
              "idxs": [
                1559442,
                1559454,
                1559418,
                1559400,
                1567818,
                1559472,
                1559430,
                1559478,
                1559394,
                1559406,
                1559412,
                1559424,
                1559436,
                1559448,
                1559460,
                1559466,
                1560450,
                1560510,
                1564578,
                1565442,
                1565688,
                1565814,
                1566138,
                1566192,
                1566564,
                1566786,
                1567446,
                1567584,
                1568226,
                1568364,
                1568376,
                1568586
              ]
            }
          },
          "retainedSizeDelta": 2464,
          "retainedSizeDeltaPerIteration": 352,
          "countDelta": 28,
          "countDeltaPerIteration": 4,
          "numIterations": 7
        },
        {
          "name": "{action, hasEagerState, eagerState, next}",
          "diff": {
            "name": "{action, hasEagerState, eagerState, next}",
            "addedCount": 197,
            "removedCount": 1,
            "addedSize": 6304,
            "removedSize": 32,
            "deletedIndexes": [
              187686
            ],
            "addedIndexes": [
              130908,
              130920,
              130932,
              130980,
              131154,
              131286,
              149184,
              149196,
              149202,
              149214,
              149220,
              149232,
              149256,
              149274,
              149286,
              149292,
              149304,
              149316,
              149322,
              149334,
              149340,
              149352,
              149358,
              149370,
              149376,
              149388,
              149436,
              149448,
              149460,
              149466,
              149478,
              149490,
              149502,
              161010,
              161022,
              161028,
              161040,
              354624,
              354636,
              354642,
              354654,
              354660,
              354672,
              354678,
              354690,
              354696,
              354708,
              368802,
              368814,
              368826,
              368838,
              368850,
              368958,
              368970,
              368982,
              368994,
              369006,
              658698,
              685410,
              685416,
              690840,
              696264,
              696270,
              701694,
              701700,
              707124,
              717966,
              717972,
              723396,
              734238,
              734244,
              739668,
              750510,
              750516,
              766920,
              766932,
              766944,
              766956,
              766968,
              766980,
              766992,
              767004,
              767016,
              846954,
              857796,
              857802,
              890298,
              890310,
              890322,
              913356,
              926760,
              926814,
              947352,
              947364,
              1008120,
              1008180,
              1008192,
              1008204,
              1008216,
              1008228,
              1008240,
              1030572,
              1048662,
              1048674,
              1048680,
              1048692,
              1048698,
              1048710,
              1048734,
              1048746,
              1048758,
              1048770,
              1048782,
              1048794,
              1057254,
              1057266,
              1057278,
              1057290,
              1057302,
              1057314,
              1057326,
              1057338,
              1058886,
              1058898,
              1058910,
              1058922,
              1058940,
              1058952,
              1058964,
              1059744,
              1059756,
              1059768,
              1059780,
              1059792,
              1059804,
              1059816,
              1059828,
              1059840,
              1059852,
              1059864,
              1059876,
              1059888,
              1059900,
              1059912,
              1083060,
              1145886,
              1167906,
              1167918,
              1171698,
              1171710,
              1171722,
              1171734,
              1171746,
              1171758,
              1180518,
              1180530,
              1180536,
              1180548,
              1180560,
              1180572,
              1180584,
              1248852,
              1248864,
              1248876,
              1303530,
              1303542,
              1303554,
              1303566,
              1307154,
              1307166,
              1307226,
              1307238,
              1307250,
              1307268,
              1307280,
              1307292,
              1307322,
              1372248,
              1388490,
              1404732,
              1420974,
              1450458,
              1450464,
              1455888,
              1461306,
              1466724,
              1491126,
              1491138,
              1491150,
              1491162,
              1491174,
              1491186,
              1491198,
              1491210,
              1491222,
              1491234,
              1535130
            ],
            "countDelta": 196,
            "sizeDelta": 6272
          },
          "aggregates": {
            "before": {
              "count": 4,
              "distance": 10,
              "self": 128,
              "maxRet": 212,
              "name": "{action, hasEagerState, eagerState, next}",
              "idxs": [
                187686,
                269940,
                349200,
                349206
              ]
            },
            "after": {
              "count": 200,
              "distance": 10,
              "self": 6400,
              "maxRet": 11944,
              "name": "{action, hasEagerState, eagerState, next}",
              "idxs": [
                653274,
                130944,
                647844,
                130908,
                130920,
                130932,
                130980,
                131154,
                131286,
                149184,
                149196,
                149202,
                149214,
                149220,
                149232,
                149256,
                149274,
                149286,
                149292,
                149304,
                149316,
                149322,
                149334,
                149340,
                149352,
                149358,
                149370,
                149376,
                149388,
                149436,
                149448,
                149460,
                149466,
                149478,
                149490,
                149502,
                161010,
                161022,
                161028,
                161040,
                354624,
                354636,
                354642,
                354654,
                354660,
                354672,
                354678,
                354690,
                354696,
                354708,
                368802,
                368814,
                368826,
                368838,
                368850,
                368958,
                368970,
                368982,
                368994,
                369006,
                658698,
                685410,
                685416,
                690840,
                696264,
                696270,
                701694,
                701700,
                707124,
                717966,
                717972,
                723396,
                734238,
                734244,
                739668,
                750510,
                750516,
                766920,
                766932,
                766944,
                766956,
                766968,
                766980,
                766992,
                767004,
                767016,
                846954,
                857796,
                857802,
                890298,
                890310,
                890322,
                913356,
                926760,
                926814,
                947352,
                947364,
                1008120,
                1008180,
                1008192,
                1008204,
                1008216,
                1008228,
                1008240,
                1030572,
                1048662,
                1048674,
                1048680,
                1048692,
                1048698,
                1048710,
                1048734,
                1048746,
                1048758,
                1048770,
                1048782,
                1048794,
                1057254,
                1057266,
                1057278,
                1057290,
                1057302,
                1057314,
                1057326,
                1057338,
                1058886,
                1058898,
                1058910,
                1058922,
                1058940,
                1058952,
                1058964,
                1059744,
                1059756,
                1059768,
                1059780,
                1059792,
                1059804,
                1059816,
                1059828,
                1059840,
                1059852,
                1059864,
                1059876,
                1059888,
                1059900,
                1059912,
                1083060,
                1145886,
                1167906,
                1167918,
                1171698,
                1171710,
                1171722,
                1171734,
                1171746,
                1171758,
                1180518,
                1180530,
                1180536,
                1180548,
                1180560,
                1180572,
                1180584,
                1248852,
                1248864,
                1248876,
                1303530,
                1303542,
                1303554,
                1303566,
                1307154,
                1307166,
                1307226,
                1307238,
                1307250,
                1307268,
                1307280,
                1307292,
                1307322,
                1372248,
                1388490,
                1404732,
                1420974,
                1450458,
                1450464,
                1455888,
                1461306,
                1466724,
                1491126,
                1491138,
                1491150,
                1491162,
                1491174,
                1491186,
                1491198,
                1491210,
                1491222,
                1491234,
                1535130
              ]
            }
          },
          "retainedSizeDelta": 11732,
          "retainedSizeDeltaPerIteration": 1676,
          "countDelta": 196,
          "countDeltaPerIteration": 28,
          "numIterations": 7
        }
      ],
      "detected": true
    },
    "before": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44650,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45940,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45949,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1311,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 3452780,
        "v8heap": 3413724,
        "native": 39056,
        "code": 1380188,
        "jsArrays": 23824,
        "strings": 511176,
        "system": 238480
      }
    },
    "after": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16344,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16356,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19166,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44650,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45940,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45949,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1311,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16332,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 8224180,
        "v8heap": 8155556,
        "native": 68624,
        "code": 1682464,
        "jsArrays": 27072,
        "strings": 4273456,
        "system": 237992
      }
    },
    "delta": 4771400,
    "deltaPerIteration": 681629,
    "numIterations": 7
  }
}
]