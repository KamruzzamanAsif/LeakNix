[
{
  "test": {
    "data": {
      "href": "/page1",
      "fullHref": "http://localhost:3000/page1"
    },
    "description": "Go to /page1 and back"
  },
  "result": {
    "leaks": {
      "collections": [],
      "eventListeners": [
        {
          "type": "resize",
          "after": 17,
          "before": 3,
          "delta": 14,
          "deltaPerIteration": 2,
          "leakingNodes": [
            {
              "countBefore": 2,
              "countAfter": 16,
              "delta": 14,
              "deltaPerIteration": 2,
              "description": "Window",
              "nodesBefore": [
                {
                  "className": "Window",
                  "description": "Window"
                }
              ],
              "nodesAfter": [
                {
                  "className": "Window",
                  "description": "Window"
                }
              ],
              "nodeCountDelta": 0,
              "nodeCountDeltaPerIteration": 0
            }
          ]
        }
      ],
      "eventListenersSummary": {
        "before": 141,
        "after": 155,
        "delta": 14,
        "deltaPerIteration": 2
      },
      "domNodes": {
        "delta": 0,
        "deltaPerIteration": 0,
        "nodes": []
      },
      "objects": [
        {
          "name": "Detached <div>",
          "diff": {
            "name": "Detached <div>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102444,
              102150,
              102222,
              102294,
              102330,
              102546,
              102624
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <div>",
              "idxs": [
                103356
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <div>",
              "idxs": [
                102444,
                103854,
                102150,
                102222,
                102294,
                102330,
                102546,
                102624
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "Detached <h1>",
          "diff": {
            "name": "Detached <h1>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102402,
              102102,
              102180,
              102252,
              102384,
              102504,
              102582
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <h1>",
              "idxs": [
                103290
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <h1>",
              "idxs": [
                102402,
                103788,
                102102,
                102180,
                102252,
                102384,
                102504,
                102582
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "Detached ElementIntersectionObserverData",
          "diff": {
            "name": "Detached ElementIntersectionObserverData",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 504,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              394602,
              395406,
              395442,
              395460,
              395472,
              398838,
              399762
            ],
            "countDelta": 7,
            "sizeDelta": 504
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 72,
              "maxRet": 72,
              "name": "Detached ElementIntersectionObserverData",
              "idxs": [
                381594
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 576,
              "maxRet": 576,
              "name": "Detached ElementIntersectionObserverData",
              "idxs": [
                394740,
                394602,
                395406,
                395442,
                395460,
                395472,
                398838,
                399762
              ]
            }
          },
          "retainedSizeDelta": 504,
          "retainedSizeDeltaPerIteration": 72,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "HTMLAnchorElement",
          "diff": {
            "name": "HTMLAnchorElement",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 112,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              19452,
              19458,
              19464,
              19470,
              19476,
              19482,
              19488
            ],
            "countDelta": 7,
            "sizeDelta": 112
          },
          "aggregates": {
            "before": {
              "count": 7,
              "distance": 4,
              "self": 1248,
              "maxRet": 2032,
              "name": "HTMLAnchorElement",
              "idxs": [
                19866,
                103302,
                103434,
                163728,
                276960,
                300954,
                306756
              ]
            },
            "after": {
              "count": 14,
              "distance": 4,
              "self": 1360,
              "maxRet": 2144,
              "name": "HTMLAnchorElement",
              "idxs": [
                19914,
                103800,
                103932,
                158094,
                272424,
                296502,
                302400,
                19452,
                19458,
                19464,
                19470,
                19476,
                19482,
                19488
              ]
            }
          },
          "retainedSizeDelta": 112,
          "retainedSizeDeltaPerIteration": 16,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "EventListener",
          "diff": {
            "name": "EventListener",
            "addedCount": 17,
            "removedCount": 3,
            "addedSize": 1224,
            "removedSize": 216,
            "deletedIndexes": [
              383466,
              383472,
              383484
            ],
            "addedIndexes": [
              395100,
              395274,
              395382,
              396576,
              399366,
              400002,
              400188,
              400314,
              400368,
              400374,
              400476,
              400692,
              400860,
              401118,
              401214,
              401286,
              401940
            ],
            "countDelta": 14,
            "sizeDelta": 1008
          },
          "aggregates": {
            "before": {
              "count": 146,
              "distance": 6,
              "self": 10512,
              "maxRet": 22376,
              "name": "EventListener",
              "idxs": [
                382758,
                382806,
                382812,
                382818,
                382830,
                382944,
                382956,
                383094,
                383106,
                383154,
                383178,
                383190,
                383202,
                383286,
                383322,
                383340,
                383364,
                383466,
                383472,
                383484,
                383496,
                383508,
                383532,
                383550,
                383562,
                383568,
                383574,
                383580,
                383586,
                383592,
                383610,
                383616,
                383622,
                383688,
                383706,
                383712,
                383730,
                383736,
                383748,
                383754,
                383766,
                383778,
                383796,
                383814,
                383832,
                383844,
                383856,
                383862,
                383868,
                383880,
                383892,
                383910,
                383946,
                383952,
                383958,
                383964,
                383976,
                383982,
                383988,
                384000,
                384006,
                384024,
                384030,
                384042,
                384048,
                384102,
                384114,
                384132,
                384138,
                384144,
                384156,
                384162,
                384180,
                384192,
                384204,
                384216,
                384222,
                384234,
                384246,
                384252,
                384282,
                384300,
                384312,
                384318,
                384330,
                384336,
                384372,
                384384,
                384408,
                384414,
                384444,
                384456,
                384462,
                384474,
                384486,
                384504,
                384522,
                384528,
                384534,
                384648,
                384660,
                384672,
                384678,
                384696,
                384708,
                384732,
                384738,
                384744,
                384756,
                384768,
                384774,
                384798,
                384804,
                384816,
                384846,
                384852,
                384858,
                384864,
                384870,
                384882,
                384900,
                384906,
                384936,
                384942,
                384948,
                384960,
                384972,
                385086,
                385134,
                385296,
                385302,
                385410,
                385482,
                385656,
                385722,
                385746,
                385758,
                386016,
                386058,
                386070,
                386166,
                386370,
                386382,
                386466,
                386766,
                386772
              ]
            },
            "after": {
              "count": 160,
              "distance": 6,
              "self": 11520,
              "maxRet": 24336,
              "name": "EventListener",
              "idxs": [
                402852,
                399102,
                400524,
                400746,
                400428,
                401952,
                396000,
                396378,
                401052,
                395298,
                399750,
                401244,
                395316,
                399870,
                399924,
                399948,
                399516,
                400500,
                400512,
                400566,
                399384,
                399798,
                397194,
                400572,
                401490,
                395142,
                399000,
                400584,
                400590,
                399222,
                399348,
                398226,
                400656,
                400680,
                395088,
                400698,
                400704,
                400716,
                400728,
                400752,
                400770,
                400788,
                400800,
                400818,
                398706,
                398154,
                400836,
                394932,
                400848,
                400182,
                400884,
                395286,
                396072,
                400920,
                395778,
                398622,
                400950,
                400956,
                399270,
                400968,
                400980,
                402510,
                401034,
                401058,
                399954,
                398700,
                400086,
                400218,
                397722,
                401094,
                401484,
                401106,
                399048,
                400134,
                401142,
                401124,
                401148,
                401166,
                401160,
                402618,
                401184,
                399888,
                400332,
                401226,
                401196,
                402126,
                401256,
                401262,
                401934,
                401268,
                401280,
                398028,
                401316,
                401334,
                401340,
                401346,
                399984,
                401442,
                401466,
                401448,
                395940,
                401472,
                398412,
                400242,
                397962,
                401580,
                395268,
                399066,
                401502,
                401520,
                401532,
                399438,
                395928,
                399144,
                400050,
                399804,
                400536,
                401574,
                400338,
                401604,
                400032,
                401610,
                401622,
                398442,
                401688,
                401982,
                395130,
                401730,
                400596,
                399756,
                401766,
                401646,
                402156,
                400308,
                402384,
                402330,
                402528,
                402372,
                402186,
                400164,
                402684,
                402732,
                398880,
                395100,
                395274,
                395382,
                396576,
                399366,
                400002,
                400188,
                400314,
                400368,
                400374,
                400476,
                400692,
                400860,
                401118,
                401214,
                401286,
                401940
              ]
            }
          },
          "retainedSizeDelta": 1960,
          "retainedSizeDeltaPerIteration": 280,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "V8EventListener",
          "diff": {
            "name": "V8EventListener",
            "addedCount": 14,
            "removedCount": 0,
            "addedSize": 560,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              395388,
              395568,
              395622,
              395742,
              395784,
              395904,
              398760,
              398820,
              399372,
              400152,
              400194,
              401082,
              402138,
              402540
            ],
            "countDelta": 14,
            "sizeDelta": 560
          },
          "aggregates": {
            "before": {
              "count": 137,
              "distance": 7,
              "self": 5480,
              "maxRet": 11396,
              "name": "V8EventListener",
              "idxs": [
                379878,
                379902,
                379908,
                379992,
                379998,
                380004,
                380010,
                380016,
                380022,
                380034,
                380040,
                380046,
                380052,
                380058,
                380064,
                380070,
                380076,
                380082,
                380088,
                380094,
                380100,
                380106,
                380112,
                380118,
                380124,
                380130,
                380136,
                380142,
                380148,
                380154,
                380160,
                380166,
                380172,
                380178,
                380184,
                380190,
                380196,
                380202,
                380208,
                380214,
                380220,
                380226,
                380232,
                380238,
                380244,
                380250,
                380256,
                380262,
                380268,
                380274,
                380280,
                380286,
                380292,
                380298,
                380304,
                380310,
                380316,
                380322,
                380670,
                380772,
                380898,
                381510,
                381576,
                381588,
                381792,
                382074,
                382158,
                382272,
                382410,
                382422,
                382470,
                382476,
                382488,
                382512,
                382524,
                382542,
                382566,
                382626,
                382764,
                382800,
                382950,
                382974,
                383016,
                383112,
                383184,
                383196,
                383220,
                383310,
                383328,
                383370,
                383490,
                383502,
                383538,
                383628,
                383742,
                383784,
                383802,
                383838,
                383874,
                383970,
                384012,
                384054,
                384108,
                384120,
                384198,
                384228,
                384240,
                384288,
                384324,
                384342,
                384348,
                384378,
                384390,
                384420,
                384426,
                384450,
                384468,
                384540,
                384690,
                384702,
                384762,
                384780,
                384786,
                384810,
                384822,
                384876,
                384912,
                385050,
                385092,
                385230,
                385542,
                385566,
                385632,
                385662,
                385740,
                385968,
                386724
              ]
            },
            "after": {
              "count": 151,
              "distance": 7,
              "self": 6040,
              "maxRet": 12348,
              "name": "V8EventListener",
              "idxs": [
                400326,
                395886,
                395946,
                396060,
                397200,
                396066,
                396192,
                396090,
                396096,
                400644,
                396102,
                396108,
                396114,
                398814,
                396126,
                396144,
                396150,
                394938,
                396216,
                401772,
                395292,
                396078,
                400926,
                395304,
                396258,
                395202,
                396264,
                396282,
                396312,
                396318,
                396324,
                396330,
                396336,
                396342,
                395244,
                396348,
                400038,
                396354,
                396360,
                396366,
                396390,
                396438,
                396444,
                396450,
                396456,
                396462,
                396468,
                396492,
                396498,
                396504,
                396516,
                396522,
                396534,
                396540,
                396564,
                401568,
                396582,
                396594,
                402264,
                396990,
                397158,
                397812,
                397950,
                397968,
                396528,
                396510,
                398418,
                398550,
                398802,
                401544,
                398898,
                398844,
                399030,
                399402,
                399108,
                396384,
                399180,
                398712,
                399258,
                400518,
                402354,
                399396,
                399414,
                400854,
                398232,
                401202,
                399234,
                399900,
                399930,
                396222,
                396084,
                399036,
                394962,
                399228,
                399426,
                400734,
                400758,
                400794,
                399972,
                402456,
                398034,
                399294,
                401040,
                401064,
                401100,
                401136,
                396372,
                401172,
                401190,
                398730,
                401220,
                401232,
                401238,
                399120,
                401250,
                399432,
                401274,
                401352,
                400938,
                399288,
                402222,
                399072,
                399420,
                401526,
                401538,
                400362,
                400344,
                400320,
                398610,
                395322,
                395148,
                396588,
                402738,
                396558,
                402084,
                395136,
                402438,
                395388,
                395568,
                395622,
                395742,
                395784,
                395904,
                398760,
                398820,
                399372,
                400152,
                400194,
                401082,
                402138,
                402540
              ]
            }
          },
          "retainedSizeDelta": 952,
          "retainedSizeDeltaPerIteration": 136,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "Detached <a>",
          "diff": {
            "name": "Detached <a>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 6216,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102408,
              102420,
              102432,
              102108,
              102126,
              102138,
              102186,
              102198,
              102210,
              102258,
              102270,
              102282,
              102342,
              102354,
              102378,
              102510,
              102522,
              102534,
              102588,
              102600,
              102612
            ],
            "countDelta": 21,
            "sizeDelta": 6216
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 888,
              "maxRet": 888,
              "name": "Detached <a>",
              "idxs": [
                103308,
                103332,
                103344
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 7104,
              "maxRet": 7104,
              "name": "Detached <a>",
              "idxs": [
                102408,
                102420,
                102432,
                103806,
                103830,
                103842,
                102108,
                102126,
                102138,
                102186,
                102198,
                102210,
                102258,
                102270,
                102282,
                102342,
                102354,
                102378,
                102510,
                102522,
                102534,
                102588,
                102600,
                102612
              ]
            }
          },
          "retainedSizeDelta": 6216,
          "retainedSizeDeltaPerIteration": 888,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached <p>",
          "diff": {
            "name": "Detached <p>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 5376,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102414,
              102426,
              102438,
              102120,
              102132,
              102144,
              102192,
              102204,
              102216,
              102264,
              102276,
              102288,
              102336,
              102348,
              102360,
              102516,
              102528,
              102540,
              102594,
              102606,
              102618
            ],
            "countDelta": 21,
            "sizeDelta": 5376
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached <p>",
              "idxs": [
                103326,
                103338,
                103350
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 6144,
              "maxRet": 6144,
              "name": "Detached <p>",
              "idxs": [
                102414,
                102426,
                102438,
                103824,
                103836,
                103848,
                102120,
                102132,
                102144,
                102192,
                102204,
                102216,
                102264,
                102276,
                102288,
                102336,
                102348,
                102360,
                102516,
                102528,
                102540,
                102594,
                102606,
                102618
              ]
            }
          },
          "retainedSizeDelta": 5376,
          "retainedSizeDeltaPerIteration": 768,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached DOMTokenList",
          "diff": {
            "name": "Detached DOMTokenList",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1176,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              395754,
              401046,
              400020,
              394980,
              395250,
              395544,
              395616,
              395706,
              395718,
              395790,
              396120,
              396186,
              396864,
              397068,
              397344,
              397740,
              399564,
              399840,
              399906,
              400602,
              401130
            ],
            "countDelta": 21,
            "sizeDelta": 1176
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 168,
              "maxRet": 168,
              "name": "Detached DOMTokenList",
              "idxs": [
                379956,
                383256,
                386676
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1344,
              "maxRet": 1344,
              "name": "Detached DOMTokenList",
              "idxs": [
                395754,
                395988,
                399852,
                401046,
                400020,
                398040,
                394980,
                395250,
                395544,
                395616,
                395706,
                395718,
                395790,
                396120,
                396186,
                396864,
                397068,
                397344,
                397740,
                399564,
                399840,
                399906,
                400602,
                401130
              ]
            }
          },
          "retainedSizeDelta": 1176,
          "retainedSizeDeltaPerIteration": 168,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached EventListener",
          "diff": {
            "name": "Detached EventListener",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1512,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              402642,
              400488,
              395502,
              395910,
              396288,
              398076,
              398268,
              400128,
              400212,
              400248,
              400272,
              400284,
              400356,
              400386,
              400416,
              400434,
              400482,
              401670,
              402240,
              402360,
              402798
            ],
            "countDelta": 21,
            "sizeDelta": 1512
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 216,
              "maxRet": 216,
              "name": "Detached EventListener",
              "idxs": [
                383514,
                383526,
                386538
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1728,
              "maxRet": 1728,
              "name": "Detached EventListener",
              "idxs": [
                402642,
                400488,
                395502,
                400548,
                400560,
                402474,
                395910,
                396288,
                398076,
                398268,
                400128,
                400212,
                400248,
                400272,
                400284,
                400356,
                400386,
                400416,
                400434,
                400482,
                401670,
                402240,
                402360,
                402798
              ]
            }
          },
          "retainedSizeDelta": 1512,
          "retainedSizeDeltaPerIteration": 216,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached V8EventHandlerNonNull",
          "diff": {
            "name": "Detached V8EventHandlerNonNull",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 672,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              395508,
              399978,
              395748,
              395610,
              395664,
              395682,
              395712,
              395844,
              395916,
              396228,
              396294,
              398082,
              398274,
              398646,
              399096,
              399204,
              399480,
              399912,
              400440,
              402786,
              402804
            ],
            "countDelta": 21,
            "sizeDelta": 672
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 96,
              "maxRet": 96,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                379920,
                379950,
                384018
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                395508,
                395958,
                402624,
                399978,
                395748,
                400962,
                395610,
                395664,
                395682,
                395712,
                395844,
                395916,
                396228,
                396294,
                398082,
                398274,
                398646,
                399096,
                399204,
                399480,
                399912,
                400440,
                402786,
                402804
              ]
            }
          },
          "retainedSizeDelta": 672,
          "retainedSizeDeltaPerIteration": 96,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached Text",
          "diff": {
            "name": "Detached Text",
            "addedCount": 28,
            "removedCount": 0,
            "addedSize": 2464,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              395394,
              402876,
              395256,
              394008,
              393900,
              393906,
              393912,
              393918,
              393924,
              393930,
              393936,
              393948,
              393954,
              393960,
              393966,
              393972,
              393978,
              393990,
              393996,
              394002,
              394434,
              397956,
              397998,
              398904,
              399828,
              400806,
              401658,
              402714
            ],
            "countDelta": 28,
            "sizeDelta": 2464
          },
          "aggregates": {
            "before": {
              "count": 4,
              "distance": -5,
              "self": 352,
              "maxRet": 352,
              "name": "Detached Text",
              "idxs": [
                382482,
                382920,
                385842,
                386790
              ]
            },
            "after": {
              "count": 32,
              "distance": -5,
              "self": 2816,
              "maxRet": 2816,
              "name": "Detached Text",
              "idxs": [
                395394,
                402876,
                395256,
                394008,
                393984,
                393942,
                398910,
                398352,
                393900,
                393906,
                393912,
                393918,
                393924,
                393930,
                393936,
                393948,
                393954,
                393960,
                393966,
                393972,
                393978,
                393990,
                393996,
                394002,
                394434,
                397956,
                397998,
                398904,
                399828,
                400806,
                401658,
                402714
              ]
            }
          },
          "retainedSizeDelta": 2464,
          "retainedSizeDeltaPerIteration": 352,
          "countDelta": 28,
          "countDeltaPerIteration": 4,
          "numIterations": 7
        }
      ],
      "detected": true
    },
    "before": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44647,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45937,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45946,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1308,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 3299392,
        "v8heap": 3260800,
        "native": 38592,
        "code": 1341800,
        "jsArrays": 23576,
        "strings": 417916,
        "system": 238460
      }
    },
    "after": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44647,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45937,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45946,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1308,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 3616048,
        "v8heap": 3552656,
        "native": 63392,
        "code": 1625452,
        "jsArrays": 24420,
        "strings": 417960,
        "system": 238052
      }
    },
    "delta": 316656,
    "deltaPerIteration": 45237,
    "numIterations": 7
  }
},
{
  "test": {
    "data": {
      "href": "/page2",
      "fullHref": "http://localhost:3000/page2"
    },
    "description": "Go to /page2 and back"
  },
  "result": {
    "leaks": {
      "collections": [],
      "eventListeners": [],
      "eventListenersSummary": {
        "before": 139,
        "after": 139,
        "delta": 0,
        "deltaPerIteration": 0
      },
      "domNodes": {
        "delta": 0,
        "deltaPerIteration": 0,
        "nodes": []
      },
      "objects": [
        {
          "name": "Detached <div>",
          "diff": {
            "name": "Detached <div>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102528,
              102120,
              102186,
              102294,
              102414,
              102600,
              102660
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <div>",
              "idxs": [
                103428
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <div>",
              "idxs": [
                102528,
                103890,
                102120,
                102186,
                102294,
                102414,
                102600,
                102660
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "Detached <h1>",
          "diff": {
            "name": "Detached <h1>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102486,
              102138,
              102252,
              102312,
              102468,
              102558,
              102618
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <h1>",
              "idxs": [
                103362
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <h1>",
              "idxs": [
                102486,
                103824,
                102138,
                102252,
                102312,
                102468,
                102558,
                102618
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "Detached ElementIntersectionObserverData",
          "diff": {
            "name": "Detached ElementIntersectionObserverData",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 504,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              396774,
              397104,
              397200,
              397410,
              397548,
              400764,
              402282
            ],
            "countDelta": 7,
            "sizeDelta": 504
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 72,
              "maxRet": 72,
              "name": "Detached ElementIntersectionObserverData",
              "idxs": [
                387342
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 576,
              "maxRet": 576,
              "name": "Detached ElementIntersectionObserverData",
              "idxs": [
                396972,
                396774,
                397104,
                397200,
                397410,
                397548,
                400764,
                402282
              ]
            }
          },
          "retainedSizeDelta": 504,
          "retainedSizeDeltaPerIteration": 72,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "FiberNode",
          "diff": {
            "name": "FiberNode",
            "addedCount": 20,
            "removedCount": 13,
            "addedSize": 2640,
            "removedSize": 1716,
            "deletedIndexes": [
              301602,
              301650,
              314358,
              314628,
              314658,
              314688,
              314694,
              314724,
              314730,
              314760,
              314802,
              315408,
              315972
            ],
            "addedIndexes": [
              297180,
              331284,
              370518,
              372432,
              372450,
              372468,
              372486,
              372504,
              372522,
              373284,
              373608,
              373872,
              373902,
              373932,
              373938,
              373968,
              373974,
              374004,
              374040,
              375162
            ],
            "countDelta": 7,
            "sizeDelta": 924
          },
          "aggregates": {
            "before": {
              "count": 36,
              "distance": 4,
              "self": 4752,
              "maxRet": 14788,
              "name": "FiberNode",
              "idxs": [
                279996,
                297906,
                297924,
                299328,
                299388,
                299436,
                299454,
                300144,
                300168,
                300408,
                300420,
                300450,
                300462,
                300492,
                300498,
                300882,
                300888,
                300924,
                300936,
                301542,
                301560,
                301602,
                301620,
                301650,
                313470,
                314358,
                314628,
                314658,
                314688,
                314694,
                314724,
                314730,
                314760,
                314802,
                315408,
                315972
              ]
            },
            "after": {
              "count": 43,
              "distance": 4,
              "self": 5676,
              "maxRet": 16404,
              "name": "FiberNode",
              "idxs": [
                275454,
                293466,
                293484,
                294888,
                294948,
                294996,
                295014,
                295734,
                295758,
                295998,
                296010,
                296040,
                296052,
                296082,
                296088,
                296472,
                296478,
                296514,
                296526,
                297120,
                297138,
                297198,
                310650,
                297180,
                331284,
                370518,
                372432,
                372450,
                372468,
                372486,
                372504,
                372522,
                373284,
                373608,
                373872,
                373902,
                373932,
                373938,
                373968,
                373974,
                374004,
                374040,
                375162
              ]
            }
          },
          "retainedSizeDelta": 1616,
          "retainedSizeDeltaPerIteration": 231,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "HTMLAnchorElement",
          "diff": {
            "name": "HTMLAnchorElement",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 112,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              19452,
              19458,
              19464,
              19470,
              19476,
              19482,
              19488
            ],
            "countDelta": 7,
            "sizeDelta": 112
          },
          "aggregates": {
            "before": {
              "count": 7,
              "distance": 4,
              "self": 1248,
              "maxRet": 2032,
              "name": "HTMLAnchorElement",
              "idxs": [
                19866,
                103374,
                103506,
                164340,
                279300,
                302250,
                307920
              ]
            },
            "after": {
              "count": 14,
              "distance": 4,
              "self": 1360,
              "maxRet": 2144,
              "name": "HTMLAnchorElement",
              "idxs": [
                19914,
                103836,
                103968,
                158640,
                274758,
                297786,
                303546,
                19452,
                19458,
                19464,
                19470,
                19476,
                19482,
                19488
              ]
            }
          },
          "retainedSizeDelta": 112,
          "retainedSizeDeltaPerIteration": 16,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "system / Context",
          "diff": {
            "name": "system / Context",
            "addedCount": 18,
            "removedCount": 11,
            "addedSize": 564,
            "removedSize": 424,
            "deletedIndexes": [
              312900,
              314118,
              314988,
              315108,
              315132,
              315594,
              315702,
              315726,
              316158,
              316266,
              316290
            ],
            "addedIndexes": [
              370200,
              370254,
              370308,
              370404,
              370410,
              370464,
              373026,
              373320,
              373368,
              374226,
              374334,
              374358,
              374784,
              374892,
              374916,
              375348,
              375456,
              375480
            ],
            "countDelta": 7,
            "sizeDelta": 140
          },
          "aggregates": {
            "before": {
              "count": 435,
              "distance": 3,
              "self": 20240,
              "maxRet": 222248,
              "name": "system / Context",
              "idxs": [
                138750,
                140652,
                140664,
                140688,
                140736,
                140748,
                140760,
                140772,
                140820,
                140844,
                140898,
                140922,
                140970,
                141030,
                141042,
                141090,
                141102,
                141114,
                141138,
                141174,
                141210,
                141246,
                141282,
                141294,
                141306,
                141318,
                141342,
                141354,
                141408,
                141420,
                141432,
                141444,
                141456,
                141468,
                141480,
                141516,
                141570,
                141618,
                141630,
                166638,
                167676,
                167694,
                167712,
                167760,
                167778,
                167790,
                167808,
                167826,
                167844,
                167886,
                167904,
                167922,
                167952,
                167976,
                167994,
                168012,
                168024,
                168048,
                168060,
                168072,
                168084,
                168102,
                168114,
                168132,
                168144,
                168156,
                168168,
                168180,
                168192,
                168204,
                168222,
                168240,
                168252,
                168270,
                168294,
                168348,
                168378,
                168390,
                172518,
                172560,
                172740,
                173082,
                237984,
                238998,
                239058,
                239076,
                239322,
                239340,
                239352,
                239364,
                240252,
                240264,
                240276,
                240288,
                240306,
                240366,
                240372,
                240378,
                240396,
                240432,
                240456,
                240468,
                240474,
                240510,
                240534,
                240540,
                240810,
                240834,
                240942,
                240984,
                241014,
                241032,
                241050,
                241092,
                241170,
                241188,
                241548,
                241578,
                241596,
                241854,
                241896,
                241986,
                242136,
                242310,
                242436,
                242484,
                242598,
                242862,
                242952,
                242982,
                243000,
                243252,
                243270,
                243312,
                243462,
                243504,
                244056,
                244320,
                244344,
                244362,
                244380,
                244398,
                244416,
                244434,
                244452,
                244470,
                244488,
                244506,
                244524,
                244542,
                244560,
                244578,
                244596,
                244614,
                244632,
                244650,
                244668,
                244686,
                244704,
                244716,
                245430,
                245442,
                245526,
                245544,
                245562,
                245580,
                245598,
                245616,
                245634,
                245652,
                245670,
                245688,
                245706,
                245724,
                245742,
                245760,
                245778,
                245796,
                245814,
                245832,
                245850,
                245868,
                245886,
                245898,
                253254,
                253374,
                256608,
                256620,
                256908,
                257352,
                257688,
                257844,
                258270,
                258276,
                258294,
                258312,
                258330,
                258348,
                258366,
                258378,
                258396,
                258414,
                258432,
                258450,
                258468,
                258486,
                258504,
                258522,
                258540,
                258558,
                258576,
                258594,
                258612,
                259110,
                259632,
                259692,
                259746,
                259800,
                259854,
                259914,
                259968,
                260022,
                260076,
                260130,
                260184,
                260448,
                260502,
                262638,
                263106,
                283446,
                284358,
                284694,
                285462,
                285654,
                285726,
                285798,
                285870,
                285954,
                286026,
                286098,
                286344,
                286422,
                286578,
                286608,
                286626,
                286680,
                286698,
                286710,
                286728,
                286746,
                286764,
                287028,
                287088,
                287106,
                287124,
                287130,
                287136,
                287142,
                287148,
                287154,
                287160,
                287166,
                287172,
                287178,
                287184,
                287190,
                287196,
                287202,
                287208,
                287214,
                287220,
                287226,
                287232,
                287238,
                287244,
                287250,
                287256,
                287262,
                287268,
                287274,
                287280,
                287286,
                287292,
                287298,
                287304,
                287310,
                287316,
                287322,
                287328,
                287334,
                287340,
                287346,
                287352,
                287358,
                288174,
                288192,
                288204,
                288234,
                288246,
                288276,
                288558,
                294684,
                294696,
                297804,
                297822,
                297828,
                297846,
                297852,
                297870,
                297876,
                297894,
                297900,
                298890,
                298896,
                298902,
                298908,
                298926,
                298932,
                298938,
                299856,
                299916,
                312900,
                313518,
                314118,
                314988,
                315108,
                315132,
                315594,
                315702,
                315726,
                316158,
                316266,
                316290,
                326010,
                330420,
                330426,
                330432,
                330444,
                330456,
                330462,
                330474,
                330486,
                330498,
                330510,
                330546,
                330552,
                330558,
                330570,
                330582,
                330588,
                330600,
                330612,
                330624,
                330636,
                337500,
                340104,
                340122,
                340404,
                345786,
                349224,
                349230,
                349236,
                349260,
                349266,
                349278,
                349284,
                349290,
                349296,
                349362,
                349368,
                349374,
                349380,
                349386,
                349392,
                349398,
                349458,
                349464,
                349470,
                349476,
                349482,
                349488,
                349494,
                349500,
                349506,
                349512,
                349518,
                349530,
                349536,
                349542,
                349548,
                349554,
                349560,
                349566,
                349572,
                349578,
                349584,
                349590,
                349596,
                349602,
                349608,
                349614,
                349620,
                349626,
                349632,
                349638,
                349644,
                349650,
                349656,
                349662,
                349668,
                349674,
                349680,
                349686,
                349692,
                349698,
                349704,
                349710,
                349716,
                349722,
                349728,
                349734,
                349740,
                349746,
                349752,
                349758,
                349764,
                349770,
                349776,
                349782,
                349788,
                349794,
                352542,
                352548,
                352554,
                352560
              ]
            },
            "after": {
              "count": 442,
              "distance": 3,
              "self": 20380,
              "maxRet": 254648,
              "name": "system / Context",
              "idxs": [
                132990,
                134928,
                134940,
                134964,
                135012,
                135024,
                135036,
                135048,
                135096,
                135120,
                135174,
                135198,
                135246,
                135306,
                135318,
                135366,
                135378,
                135390,
                135414,
                135450,
                135486,
                135522,
                135558,
                135570,
                135582,
                135594,
                135618,
                135630,
                135684,
                135696,
                135708,
                135720,
                135732,
                135744,
                135756,
                135792,
                135852,
                135900,
                135912,
                160938,
                161988,
                162006,
                162024,
                162072,
                162090,
                162102,
                162120,
                162138,
                162156,
                162198,
                162216,
                162234,
                162264,
                162288,
                162306,
                162324,
                162336,
                162360,
                162372,
                162384,
                162396,
                162414,
                162426,
                162444,
                162456,
                162468,
                162480,
                162492,
                162504,
                162516,
                162534,
                162558,
                162570,
                162588,
                162612,
                162666,
                162696,
                162708,
                166866,
                166908,
                167088,
                167436,
                233424,
                234438,
                234498,
                234516,
                234762,
                234780,
                234792,
                234804,
                235692,
                235704,
                235716,
                235728,
                235746,
                235806,
                235812,
                235818,
                235836,
                235872,
                235896,
                235908,
                235914,
                235950,
                235974,
                235980,
                236250,
                236274,
                236382,
                236424,
                236454,
                236472,
                236490,
                236532,
                236610,
                236628,
                236988,
                237018,
                237036,
                237294,
                237336,
                237426,
                237576,
                237750,
                237876,
                237924,
                238038,
                238302,
                238392,
                238422,
                238440,
                238692,
                238710,
                238752,
                238902,
                238944,
                239496,
                239760,
                239784,
                239802,
                239820,
                239838,
                239856,
                239874,
                239892,
                239910,
                239928,
                239946,
                239964,
                239982,
                240000,
                240018,
                240036,
                240054,
                240072,
                240090,
                240108,
                240126,
                240144,
                240156,
                240870,
                240882,
                240966,
                240984,
                241002,
                241020,
                241038,
                241056,
                241074,
                241092,
                241110,
                241128,
                241146,
                241164,
                241182,
                241200,
                241218,
                241236,
                241254,
                241272,
                241290,
                241308,
                241326,
                241338,
                248694,
                248814,
                252048,
                252060,
                252348,
                252792,
                253128,
                253284,
                253710,
                253716,
                253734,
                253752,
                253770,
                253788,
                253806,
                253818,
                253836,
                253854,
                253872,
                253890,
                253908,
                253926,
                253944,
                253962,
                253980,
                253998,
                254016,
                254034,
                254052,
                254550,
                255072,
                255132,
                255186,
                255240,
                255294,
                255354,
                255408,
                255462,
                255516,
                255570,
                255624,
                255888,
                255942,
                258078,
                258552,
                278904,
                279816,
                280152,
                280944,
                281136,
                281208,
                281280,
                281352,
                281436,
                281508,
                281580,
                281826,
                281904,
                282060,
                282090,
                282108,
                282162,
                282180,
                282192,
                282210,
                282228,
                282246,
                282510,
                282570,
                282588,
                282606,
                282612,
                282618,
                282624,
                282630,
                282636,
                282642,
                282648,
                282654,
                282660,
                282666,
                282672,
                282678,
                282684,
                282690,
                282696,
                282702,
                282708,
                282714,
                282720,
                282726,
                282732,
                282738,
                282744,
                282750,
                282756,
                282762,
                282768,
                282774,
                282780,
                282786,
                282792,
                282798,
                282804,
                282810,
                282816,
                282822,
                282828,
                282834,
                282840,
                283656,
                283680,
                283698,
                283728,
                283740,
                283770,
                284052,
                290208,
                290220,
                293364,
                293382,
                293388,
                293406,
                293412,
                293430,
                293436,
                293454,
                293460,
                294450,
                294456,
                294462,
                294468,
                294486,
                294492,
                294498,
                295416,
                295476,
                310698,
                322812,
                329226,
                329232,
                329238,
                329250,
                329262,
                329268,
                329280,
                329292,
                329304,
                329316,
                329352,
                329358,
                329364,
                329376,
                329388,
                329394,
                329406,
                329418,
                329430,
                329442,
                335856,
                338466,
                338484,
                338766,
                344148,
                347586,
                347592,
                347598,
                347622,
                347628,
                347640,
                347646,
                347652,
                347658,
                347724,
                347730,
                347736,
                347742,
                347748,
                347754,
                347760,
                347820,
                347826,
                347832,
                347838,
                347844,
                347850,
                347856,
                347862,
                347868,
                347874,
                347880,
                347892,
                347898,
                347904,
                347910,
                347916,
                347922,
                347928,
                347934,
                347940,
                347946,
                347952,
                347958,
                347964,
                347970,
                347976,
                347982,
                347988,
                347994,
                348000,
                348006,
                348012,
                348018,
                348024,
                348030,
                348036,
                348042,
                348048,
                348054,
                348060,
                348066,
                348072,
                348078,
                348084,
                348090,
                348096,
                348102,
                348108,
                348114,
                348120,
                348126,
                348132,
                348138,
                348144,
                348150,
                348156,
                351486,
                351492,
                351498,
                351504,
                370200,
                370254,
                370308,
                370404,
                370410,
                370464,
                373026,
                373320,
                373368,
                374226,
                374334,
                374358,
                374784,
                374892,
                374916,
                375348,
                375456,
                375480
              ]
            }
          },
          "retainedSizeDelta": 32400,
          "retainedSizeDeltaPerIteration": 4629,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "DOMTimer",
          "diff": {
            "name": "DOMTimer",
            "addedCount": 14,
            "removedCount": 0,
            "addedSize": 2688,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              396804,
              396816,
              396828,
              396852,
              396864,
              396876,
              396888,
              396900,
              396918,
              396924,
              396930,
              396942,
              396948,
              396954
            ],
            "countDelta": 14,
            "sizeDelta": 2688
          },
          "aggregates": {
            "before": {
              "count": 2,
              "distance": 6,
              "self": 384,
              "maxRet": 632,
              "name": "DOMTimer",
              "idxs": [
                380286,
                380298
              ]
            },
            "after": {
              "count": 16,
              "distance": 6,
              "self": 3072,
              "maxRet": 5056,
              "name": "DOMTimer",
              "idxs": [
                396840,
                396936,
                396804,
                396816,
                396828,
                396852,
                396864,
                396876,
                396888,
                396900,
                396918,
                396924,
                396930,
                396942,
                396948,
                396954
              ]
            }
          },
          "retainedSizeDelta": 4424,
          "retainedSizeDeltaPerIteration": 632,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "ScheduledAction",
          "diff": {
            "name": "ScheduledAction",
            "addedCount": 14,
            "removedCount": 0,
            "addedSize": 784,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              396810,
              396822,
              396834,
              396858,
              396870,
              396882,
              396894,
              396906,
              397326,
              397848,
              398052,
              399336,
              404286,
              404484
            ],
            "countDelta": 14,
            "sizeDelta": 784
          },
          "aggregates": {
            "before": {
              "count": 2,
              "distance": 7,
              "self": 112,
              "maxRet": 248,
              "name": "ScheduledAction",
              "idxs": [
                380292,
                380304
              ]
            },
            "after": {
              "count": 16,
              "distance": 7,
              "self": 896,
              "maxRet": 1984,
              "name": "ScheduledAction",
              "idxs": [
                396846,
                398022,
                396810,
                396822,
                396834,
                396858,
                396870,
                396882,
                396894,
                396906,
                397326,
                397848,
                398052,
                399336,
                404286,
                404484
              ]
            }
          },
          "retainedSizeDelta": 1736,
          "retainedSizeDeltaPerIteration": 248,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "V8Function",
          "diff": {
            "name": "V8Function",
            "addedCount": 14,
            "removedCount": 0,
            "addedSize": 560,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              397230,
              397596,
              397704,
              397716,
              397860,
              398040,
              398046,
              398064,
              398616,
              398640,
              398712,
              402828,
              403884,
              404292
            ],
            "countDelta": 14,
            "sizeDelta": 560
          },
          "aggregates": {
            "before": {
              "count": 2,
              "distance": 8,
              "self": 80,
              "maxRet": 136,
              "name": "V8Function",
              "idxs": [
                380622,
                380634
              ]
            },
            "after": {
              "count": 16,
              "distance": 8,
              "self": 640,
              "maxRet": 1088,
              "name": "V8Function",
              "idxs": [
                398016,
                398034,
                397230,
                397596,
                397704,
                397716,
                397860,
                398040,
                398046,
                398064,
                398616,
                398640,
                398712,
                402828,
                403884,
                404292
              ]
            }
          },
          "retainedSizeDelta": 952,
          "retainedSizeDeltaPerIteration": 136,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "Detached <a>",
          "diff": {
            "name": "Detached <a>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 6216,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102492,
              102504,
              102516,
              102144,
              102162,
              102174,
              102258,
              102270,
              102282,
              102318,
              102330,
              102342,
              102426,
              102438,
              102462,
              102564,
              102576,
              102588,
              102624,
              102636,
              102648
            ],
            "countDelta": 21,
            "sizeDelta": 6216
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 888,
              "maxRet": 888,
              "name": "Detached <a>",
              "idxs": [
                103380,
                103404,
                103416
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 7104,
              "maxRet": 7104,
              "name": "Detached <a>",
              "idxs": [
                102492,
                102504,
                102516,
                103842,
                103866,
                103878,
                102144,
                102162,
                102174,
                102258,
                102270,
                102282,
                102318,
                102330,
                102342,
                102426,
                102438,
                102462,
                102564,
                102576,
                102588,
                102624,
                102636,
                102648
              ]
            }
          },
          "retainedSizeDelta": 6216,
          "retainedSizeDeltaPerIteration": 888,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached <p>",
          "diff": {
            "name": "Detached <p>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 5376,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102498,
              102510,
              102522,
              102156,
              102168,
              102180,
              102264,
              102276,
              102288,
              102324,
              102336,
              102348,
              102420,
              102432,
              102444,
              102570,
              102582,
              102594,
              102630,
              102642,
              102654
            ],
            "countDelta": 21,
            "sizeDelta": 5376
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached <p>",
              "idxs": [
                103398,
                103410,
                103422
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 6144,
              "maxRet": 6144,
              "name": "Detached <p>",
              "idxs": [
                102498,
                102510,
                102522,
                103860,
                103872,
                103884,
                102156,
                102168,
                102180,
                102264,
                102276,
                102288,
                102324,
                102336,
                102348,
                102420,
                102432,
                102444,
                102570,
                102582,
                102594,
                102630,
                102642,
                102654
              ]
            }
          },
          "retainedSizeDelta": 5376,
          "retainedSizeDeltaPerIteration": 768,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached DOMTokenList",
          "diff": {
            "name": "Detached DOMTokenList",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1176,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              401718,
              404256,
              404454,
              397608,
              397632,
              397674,
              397752,
              397788,
              397836,
              397908,
              400374,
              400860,
              401352,
              402216,
              402546,
              402798,
              402804,
              403152,
              404208,
              404298,
              404814
            ],
            "countDelta": 21,
            "sizeDelta": 1176
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 168,
              "maxRet": 168,
              "name": "Detached DOMTokenList",
              "idxs": [
                380676,
                382962,
                387240
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1344,
              "maxRet": 1344,
              "name": "Detached DOMTokenList",
              "idxs": [
                398130,
                400896,
                401718,
                404256,
                404454,
                404766,
                397608,
                397632,
                397674,
                397752,
                397788,
                397836,
                397908,
                400374,
                400860,
                401352,
                402216,
                402546,
                402798,
                402804,
                403152,
                404208,
                404298,
                404814
              ]
            }
          },
          "retainedSizeDelta": 1176,
          "retainedSizeDeltaPerIteration": 168,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached EventListener",
          "diff": {
            "name": "Detached EventListener",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1512,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              401514,
              402228,
              397728,
              397242,
              399702,
              399894,
              399924,
              400866,
              400890,
              401202,
              401364,
              401748,
              401850,
              402114,
              402150,
              402156,
              402186,
              402210,
              402636,
              403158,
              403434
            ],
            "countDelta": 21,
            "sizeDelta": 1512
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 216,
              "maxRet": 216,
              "name": "Detached EventListener",
              "idxs": [
                383664,
                383904,
                383928
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1728,
              "maxRet": 1728,
              "name": "Detached EventListener",
              "idxs": [
                401514,
                398688,
                402228,
                402270,
                401046,
                397728,
                397242,
                399702,
                399894,
                399924,
                400866,
                400890,
                401202,
                401364,
                401748,
                401850,
                402114,
                402150,
                402156,
                402186,
                402210,
                402636,
                403158,
                403434
              ]
            }
          },
          "retainedSizeDelta": 1512,
          "retainedSizeDeltaPerIteration": 216,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached V8EventHandlerNonNull",
          "diff": {
            "name": "Detached V8EventHandlerNonNull",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 672,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              397938,
              399804,
              404718,
              397602,
              397626,
              397656,
              397692,
              397770,
              397974,
              398214,
              398784,
              399240,
              399522,
              399708,
              399816,
              399900,
              401130,
              401370,
              402120,
              402162,
              404850
            ],
            "countDelta": 21,
            "sizeDelta": 672
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 96,
              "maxRet": 96,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                380670,
                383910,
                385824
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                397938,
                398124,
                399804,
                402276,
                398190,
                404718,
                397602,
                397626,
                397656,
                397692,
                397770,
                397974,
                398214,
                398784,
                399240,
                399522,
                399708,
                399816,
                399900,
                401130,
                401370,
                402120,
                402162,
                404850
              ]
            }
          },
          "retainedSizeDelta": 672,
          "retainedSizeDeltaPerIteration": 96,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached Text",
          "diff": {
            "name": "Detached Text",
            "addedCount": 28,
            "removedCount": 0,
            "addedSize": 2464,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              400998,
              396108,
              396078,
              398430,
              396030,
              396036,
              396048,
              396054,
              396060,
              396066,
              396072,
              396084,
              396090,
              396096,
              396102,
              396114,
              396120,
              396132,
              396138,
              397320,
              397386,
              400908,
              401406,
              401898,
              402024,
              403824,
              404148,
              404436
            ],
            "countDelta": 28,
            "sizeDelta": 2464
          },
          "aggregates": {
            "before": {
              "count": 4,
              "distance": -5,
              "self": 352,
              "maxRet": 352,
              "name": "Detached Text",
              "idxs": [
                379866,
                379872,
                385536,
                387234
              ]
            },
            "after": {
              "count": 32,
              "distance": -5,
              "self": 2816,
              "maxRet": 2816,
              "name": "Detached Text",
              "idxs": [
                396042,
                397146,
                400998,
                396108,
                396078,
                398430,
                401196,
                396126,
                396030,
                396036,
                396048,
                396054,
                396060,
                396066,
                396072,
                396084,
                396090,
                396096,
                396102,
                396114,
                396120,
                396132,
                396138,
                397320,
                397386,
                400908,
                401406,
                401898,
                402024,
                403824,
                404148,
                404436
              ]
            }
          },
          "retainedSizeDelta": 2464,
          "retainedSizeDeltaPerIteration": 352,
          "countDelta": 28,
          "countDeltaPerIteration": 4,
          "numIterations": 7
        }
      ],
      "detected": true
    },
    "before": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44647,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45937,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45946,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1308,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 3303572,
        "v8heap": 3265324,
        "native": 38248,
        "code": 1342536,
        "jsArrays": 23648,
        "strings": 418156,
        "system": 238500
      }
    },
    "after": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44647,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45937,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45946,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1308,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 3639696,
        "v8heap": 3575912,
        "native": 63784,
        "code": 1639816,
        "jsArrays": 25356,
        "strings": 418200,
        "system": 238120
      }
    },
    "delta": 336124,
    "deltaPerIteration": 48018,
    "numIterations": 7
  }
}
]