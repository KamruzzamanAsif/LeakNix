[
{
  "test": {
    "data": {
      "href": "/page1",
      "fullHref": "http://localhost:3000/page1"
    },
    "description": "Go to /page1 and back"
  },
  "result": {
    "leaks": {
      "collections": [],
      "eventListeners": [
        {
          "type": "resize",
          "after": 17,
          "before": 3,
          "delta": 14,
          "deltaPerIteration": 2,
          "leakingNodes": [
            {
              "countBefore": 2,
              "countAfter": 16,
              "delta": 14,
              "deltaPerIteration": 2,
              "description": "Window",
              "nodesBefore": [
                {
                  "className": "Window",
                  "description": "Window"
                }
              ],
              "nodesAfter": [
                {
                  "className": "Window",
                  "description": "Window"
                }
              ],
              "nodeCountDelta": 0,
              "nodeCountDeltaPerIteration": 0
            }
          ]
        }
      ],
      "eventListenersSummary": {
        "before": 141,
        "after": 155,
        "delta": 14,
        "deltaPerIteration": 2
      },
      "domNodes": {
        "delta": 0,
        "deltaPerIteration": 0,
        "nodes": []
      },
      "objects": [
        {
          "name": "Detached <div>",
          "diff": {
            "name": "Detached <div>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102444,
              102150,
              102222,
              102294,
              102330,
              102546,
              102624
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <div>",
              "idxs": [
                103356
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <div>",
              "idxs": [
                102444,
                103854,
                102150,
                102222,
                102294,
                102330,
                102546,
                102624
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "Detached <h1>",
          "diff": {
            "name": "Detached <h1>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102402,
              102102,
              102180,
              102252,
              102384,
              102504,
              102582
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <h1>",
              "idxs": [
                103290
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <h1>",
              "idxs": [
                102402,
                103788,
                102102,
                102180,
                102252,
                102384,
                102504,
                102582
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "Detached ElementIntersectionObserverData",
          "diff": {
            "name": "Detached ElementIntersectionObserverData",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 504,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              394644,
              394794,
              394884,
              395286,
              398556,
              400284,
              401682
            ],
            "countDelta": 7,
            "sizeDelta": 504
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 72,
              "maxRet": 72,
              "name": "Detached ElementIntersectionObserverData",
              "idxs": [
                379668
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 576,
              "maxRet": 576,
              "name": "Detached ElementIntersectionObserverData",
              "idxs": [
                402750,
                394644,
                394794,
                394884,
                395286,
                398556,
                400284,
                401682
              ]
            }
          },
          "retainedSizeDelta": 504,
          "retainedSizeDeltaPerIteration": 72,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "HTMLAnchorElement",
          "diff": {
            "name": "HTMLAnchorElement",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 112,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              19452,
              19458,
              19464,
              19470,
              19476,
              19482,
              19488
            ],
            "countDelta": 7,
            "sizeDelta": 112
          },
          "aggregates": {
            "before": {
              "count": 7,
              "distance": 4,
              "self": 1248,
              "maxRet": 2032,
              "name": "HTMLAnchorElement",
              "idxs": [
                19866,
                103302,
                103434,
                163500,
                252882,
                303222,
                309282
              ]
            },
            "after": {
              "count": 14,
              "distance": 4,
              "self": 1360,
              "maxRet": 2144,
              "name": "HTMLAnchorElement",
              "idxs": [
                19914,
                103800,
                103932,
                158106,
                248646,
                299256,
                305412,
                19452,
                19458,
                19464,
                19470,
                19476,
                19482,
                19488
              ]
            }
          },
          "retainedSizeDelta": 112,
          "retainedSizeDeltaPerIteration": 16,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "EventListener",
          "diff": {
            "name": "EventListener",
            "addedCount": 17,
            "removedCount": 3,
            "addedSize": 1224,
            "removedSize": 216,
            "deletedIndexes": [
              383238,
              383322,
              383328
            ],
            "addedIndexes": [
              398742,
              398892,
              399300,
              399354,
              399768,
              399864,
              399888,
              399930,
              400002,
              400026,
              400038,
              400056,
              400104,
              400128,
              400158,
              400998,
              402024
            ],
            "countDelta": 14,
            "sizeDelta": 1008
          },
          "aggregates": {
            "before": {
              "count": 146,
              "distance": 6,
              "self": 10512,
              "maxRet": 22376,
              "name": "EventListener",
              "idxs": [
                382530,
                382584,
                382596,
                382608,
                382656,
                382680,
                382734,
                382740,
                382752,
                382794,
                382818,
                382860,
                382890,
                383010,
                383076,
                383088,
                383130,
                383148,
                383160,
                383220,
                383232,
                383238,
                383244,
                383256,
                383304,
                383322,
                383328,
                383334,
                383352,
                383364,
                383418,
                383424,
                383448,
                383454,
                383460,
                383466,
                383478,
                383496,
                383538,
                383544,
                383550,
                383562,
                383568,
                383580,
                383586,
                383604,
                383622,
                383634,
                383700,
                383706,
                383712,
                383718,
                383742,
                383748,
                383760,
                383766,
                383772,
                383790,
                383796,
                383808,
                383814,
                383820,
                383832,
                383844,
                383850,
                383862,
                383868,
                383886,
                383898,
                383904,
                383922,
                383940,
                383952,
                383958,
                383970,
                383976,
                383994,
                384006,
                384048,
                384054,
                384060,
                384066,
                384072,
                384090,
                384114,
                384126,
                384132,
                384144,
                384150,
                384180,
                384186,
                384240,
                384258,
                384270,
                384288,
                384294,
                384300,
                384306,
                384336,
                384354,
                384360,
                384366,
                384378,
                384390,
                384438,
                384450,
                384468,
                384486,
                384504,
                384510,
                384516,
                384522,
                384528,
                384540,
                384552,
                384558,
                384588,
                384594,
                384600,
                384606,
                384612,
                384618,
                384642,
                384654,
                384672,
                384696,
                384702,
                384738,
                384744,
                384750,
                384786,
                384798,
                384810,
                384822,
                384840,
                385260,
                385632,
                385836,
                386016,
                386028,
                386058,
                386136,
                386454,
                386466,
                386778,
                386796
              ]
            },
            "after": {
              "count": 160,
              "distance": 6,
              "self": 11520,
              "maxRet": 24336,
              "name": "EventListener",
              "idxs": [
                401424,
                401226,
                400560,
                399732,
                398880,
                396540,
                401256,
                401262,
                400824,
                402180,
                398184,
                399324,
                397830,
                399486,
                396510,
                399546,
                399576,
                399594,
                399642,
                398922,
                400194,
                399690,
                399702,
                398226,
                397110,
                400074,
                401394,
                400266,
                400278,
                400314,
                400458,
                398664,
                400470,
                400476,
                396366,
                400494,
                400500,
                395136,
                400524,
                395202,
                400536,
                400050,
                399246,
                402522,
                402228,
                400548,
                395238,
                401826,
                401604,
                400590,
                395094,
                400602,
                402468,
                395610,
                398418,
                395160,
                400080,
                398478,
                400596,
                398724,
                400638,
                400650,
                399528,
                400662,
                399048,
                398874,
                394974,
                400254,
                400704,
                400722,
                400728,
                400746,
                400764,
                400776,
                400788,
                401814,
                400794,
                397170,
                399000,
                394992,
                401502,
                400878,
                396342,
                400890,
                400008,
                400686,
                400962,
                400968,
                398430,
                399522,
                401022,
                401028,
                401034,
                399624,
                400248,
                401040,
                401058,
                399504,
                401118,
                401130,
                401148,
                399450,
                398712,
                399102,
                401178,
                401190,
                401196,
                401202,
                398382,
                399432,
                400116,
                398814,
                398838,
                401250,
                401214,
                401304,
                401322,
                401346,
                401352,
                399252,
                401388,
                400260,
                401412,
                399198,
                401418,
                402822,
                401874,
                401442,
                398460,
                399552,
                401460,
                401592,
                398886,
                396798,
                400452,
                396678,
                398496,
                395076,
                401886,
                402618,
                402636,
                402018,
                401760,
                398742,
                398892,
                399300,
                399354,
                399768,
                399864,
                399888,
                399930,
                400002,
                400026,
                400038,
                400056,
                400104,
                400128,
                400158,
                400998,
                402024
              ]
            }
          },
          "retainedSizeDelta": 1960,
          "retainedSizeDeltaPerIteration": 280,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "V8EventListener",
          "diff": {
            "name": "V8EventListener",
            "addedCount": 14,
            "removedCount": 0,
            "addedSize": 560,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              394944,
              395400,
              395412,
              395730,
              395778,
              396054,
              398202,
              398520,
              399072,
              399870,
              399876,
              400098,
              400164,
              401766
            ],
            "countDelta": 14,
            "sizeDelta": 560
          },
          "aggregates": {
            "before": {
              "count": 137,
              "distance": 7,
              "self": 5480,
              "maxRet": 11396,
              "name": "V8EventListener",
              "idxs": [
                379806,
                379896,
                379902,
                379908,
                379914,
                379926,
                379932,
                379938,
                379944,
                379950,
                379956,
                379962,
                379968,
                379974,
                379980,
                379986,
                379992,
                379998,
                380004,
                380010,
                380016,
                380022,
                380028,
                380034,
                380040,
                380046,
                380052,
                380070,
                380076,
                380082,
                380088,
                380094,
                380100,
                380106,
                380112,
                380118,
                380124,
                380130,
                380142,
                380148,
                380154,
                380160,
                380166,
                380172,
                380178,
                380184,
                380190,
                380196,
                380202,
                380208,
                380214,
                380220,
                380226,
                380232,
                380238,
                380244,
                380250,
                380256,
                380262,
                380268,
                380274,
                380280,
                380286,
                380292,
                380298,
                380304,
                380310,
                380334,
                380634,
                380784,
                380790,
                380814,
                380946,
                381312,
                381402,
                381468,
                381558,
                381582,
                382104,
                382278,
                382314,
                382344,
                382356,
                382386,
                382392,
                382398,
                382404,
                382464,
                382500,
                382524,
                382536,
                382590,
                382602,
                382662,
                382686,
                382692,
                382698,
                382746,
                382824,
                383016,
                383106,
                383154,
                383166,
                383226,
                383310,
                383340,
                383382,
                383472,
                383556,
                383574,
                383616,
                383628,
                383754,
                383856,
                383892,
                383910,
                383946,
                383964,
                384000,
                384012,
                384078,
                384084,
                384120,
                384138,
                384246,
                384342,
                384564,
                384708,
                384870,
                385152,
                385422,
                385764,
                385770,
                386460,
                386568,
                386580,
                386712
              ]
            },
            "after": {
              "count": 151,
              "distance": 7,
              "self": 6040,
              "maxRet": 12348,
              "name": "V8EventListener",
              "idxs": [
                396084,
                400272,
                396132,
                400068,
                399882,
                396150,
                396156,
                396168,
                396174,
                396180,
                396186,
                396192,
                396198,
                396210,
                396216,
                395616,
                396234,
                396240,
                396258,
                398730,
                396294,
                396306,
                400572,
                400692,
                396312,
                396318,
                396324,
                400752,
                396330,
                396336,
                395178,
                396516,
                396348,
                396354,
                394932,
                396360,
                400830,
                395082,
                396372,
                400914,
                396378,
                397908,
                396396,
                395244,
                396408,
                402288,
                396414,
                396426,
                401124,
                396456,
                396462,
                396468,
                396474,
                396480,
                396486,
                396492,
                396498,
                396504,
                396522,
                396048,
                396564,
                396570,
                396582,
                401328,
                396588,
                394962,
                396594,
                396600,
                396936,
                397842,
                397848,
                398016,
                397236,
                395958,
                397560,
                397482,
                397734,
                396042,
                398214,
                398412,
                398502,
                398544,
                398580,
                398586,
                398592,
                398652,
                398682,
                398778,
                398808,
                398904,
                399648,
                400554,
                400566,
                396162,
                399090,
                399108,
                399630,
                400872,
                399792,
                398670,
                399570,
                399618,
                396654,
                398928,
                396144,
                397116,
                397986,
                396138,
                399222,
                400530,
                396684,
                401634,
                396804,
                400656,
                398964,
                394980,
                400710,
                398424,
                400782,
                398508,
                395250,
                401808,
                400644,
                400896,
                400992,
                401046,
                398844,
                398688,
                402054,
                401742,
                402186,
                396282,
                399258,
                402624,
                402672,
                398820,
                401334,
                394944,
                395400,
                395412,
                395730,
                395778,
                396054,
                398202,
                398520,
                399072,
                399870,
                399876,
                400098,
                400164,
                401766
              ]
            }
          },
          "retainedSizeDelta": 952,
          "retainedSizeDeltaPerIteration": 136,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "Detached <a>",
          "diff": {
            "name": "Detached <a>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 6216,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102408,
              102420,
              102432,
              102108,
              102126,
              102138,
              102186,
              102198,
              102210,
              102258,
              102270,
              102282,
              102342,
              102354,
              102378,
              102510,
              102522,
              102534,
              102588,
              102600,
              102612
            ],
            "countDelta": 21,
            "sizeDelta": 6216
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 888,
              "maxRet": 888,
              "name": "Detached <a>",
              "idxs": [
                103308,
                103332,
                103344
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 7104,
              "maxRet": 7104,
              "name": "Detached <a>",
              "idxs": [
                102408,
                102420,
                102432,
                103806,
                103830,
                103842,
                102108,
                102126,
                102138,
                102186,
                102198,
                102210,
                102258,
                102270,
                102282,
                102342,
                102354,
                102378,
                102510,
                102522,
                102534,
                102588,
                102600,
                102612
              ]
            }
          },
          "retainedSizeDelta": 6216,
          "retainedSizeDeltaPerIteration": 888,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached <p>",
          "diff": {
            "name": "Detached <p>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 5376,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102414,
              102426,
              102438,
              102120,
              102132,
              102144,
              102192,
              102204,
              102216,
              102264,
              102276,
              102288,
              102336,
              102348,
              102360,
              102516,
              102528,
              102540,
              102594,
              102606,
              102618
            ],
            "countDelta": 21,
            "sizeDelta": 5376
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached <p>",
              "idxs": [
                103326,
                103338,
                103350
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 6144,
              "maxRet": 6144,
              "name": "Detached <p>",
              "idxs": [
                102414,
                102426,
                102438,
                103824,
                103836,
                103848,
                102120,
                102132,
                102144,
                102192,
                102204,
                102216,
                102264,
                102276,
                102288,
                102336,
                102348,
                102360,
                102516,
                102528,
                102540,
                102594,
                102606,
                102618
              ]
            }
          },
          "retainedSizeDelta": 5376,
          "retainedSizeDeltaPerIteration": 768,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached DOMTokenList",
          "diff": {
            "name": "Detached DOMTokenList",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1176,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              395814,
              402738,
              402708,
              395100,
              395268,
              395358,
              395604,
              395640,
              395964,
              396204,
              396288,
              398562,
              398574,
              399240,
              399312,
              399900,
              400986,
              401508,
              401832,
              401922,
              402810
            ],
            "countDelta": 21,
            "sizeDelta": 1176
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 168,
              "maxRet": 168,
              "name": "Detached DOMTokenList",
              "idxs": [
                379836,
                381960,
                383250
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1344,
              "maxRet": 1344,
              "name": "Detached DOMTokenList",
              "idxs": [
                395814,
                396096,
                398052,
                399696,
                402738,
                402708,
                395100,
                395268,
                395358,
                395604,
                395640,
                395964,
                396204,
                396288,
                398562,
                398574,
                399240,
                399312,
                399900,
                400986,
                401508,
                401832,
                401922,
                402810
              ]
            }
          },
          "retainedSizeDelta": 1176,
          "retainedSizeDeltaPerIteration": 168,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached EventListener",
          "diff": {
            "name": "Detached EventListener",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1512,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              400200,
              396072,
              400206,
              396066,
              398280,
              399168,
              399342,
              399606,
              399894,
              399948,
              399954,
              400044,
              400086,
              400092,
              400110,
              400122,
              400140,
              400152,
              400734,
              401286,
              402042
            ],
            "countDelta": 21,
            "sizeDelta": 1512
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 216,
              "maxRet": 216,
              "name": "Detached EventListener",
              "idxs": [
                383370,
                383400,
                383412
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1728,
              "maxRet": 1728,
              "name": "Detached EventListener",
              "idxs": [
                400200,
                396072,
                400206,
                398160,
                400224,
                399960,
                396066,
                398280,
                399168,
                399342,
                399606,
                399894,
                399948,
                399954,
                400044,
                400086,
                400092,
                400110,
                400122,
                400140,
                400152,
                400734,
                401286,
                402042
              ]
            }
          },
          "retainedSizeDelta": 1512,
          "retainedSizeDeltaPerIteration": 216,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached V8EventHandlerNonNull",
          "diff": {
            "name": "Detached V8EventHandlerNonNull",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 672,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              395832,
              395868,
              396078,
              395352,
              395394,
              395598,
              395634,
              395676,
              395694,
              395754,
              395928,
              395952,
              396222,
              396252,
              396630,
              398286,
              399348,
              399444,
              399612,
              399636,
              402798
            ],
            "countDelta": 21,
            "sizeDelta": 672
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 96,
              "maxRet": 96,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                379872,
                383376,
                383406
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                395832,
                395868,
                396120,
                396078,
                398166,
                400236,
                395352,
                395394,
                395598,
                395634,
                395676,
                395694,
                395754,
                395928,
                395952,
                396222,
                396252,
                396630,
                398286,
                399348,
                399444,
                399612,
                399636,
                402798
              ]
            }
          },
          "retainedSizeDelta": 672,
          "retainedSizeDeltaPerIteration": 96,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached Text",
          "diff": {
            "name": "Detached Text",
            "addedCount": 28,
            "removedCount": 0,
            "addedSize": 2464,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              402354,
              394008,
              393966,
              393930,
              393882,
              393888,
              393894,
              393912,
              393918,
              393924,
              393936,
              393942,
              393954,
              393960,
              393972,
              393978,
              393990,
              393996,
              394002,
              394968,
              395214,
              399156,
              399906,
              400620,
              400848,
              401598,
              401982,
              402870
            ],
            "countDelta": 28,
            "sizeDelta": 2464
          },
          "aggregates": {
            "before": {
              "count": 4,
              "distance": -5,
              "self": 352,
              "maxRet": 352,
              "name": "Detached Text",
              "idxs": [
                379200,
                379728,
                382410,
                385920
              ]
            },
            "after": {
              "count": 32,
              "distance": -5,
              "self": 2816,
              "maxRet": 2816,
              "name": "Detached Text",
              "idxs": [
                393948,
                393984,
                402354,
                394008,
                393966,
                393900,
                393930,
                393906,
                393882,
                393888,
                393894,
                393912,
                393918,
                393924,
                393936,
                393942,
                393954,
                393960,
                393972,
                393978,
                393990,
                393996,
                394002,
                394968,
                395214,
                399156,
                399906,
                400620,
                400848,
                401598,
                401982,
                402870
              ]
            }
          },
          "retainedSizeDelta": 2464,
          "retainedSizeDeltaPerIteration": 352,
          "countDelta": 28,
          "countDeltaPerIteration": 4,
          "numIterations": 7
        }
      ],
      "detected": true
    },
    "before": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44647,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45937,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45946,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1308,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 3299628,
        "v8heap": 3261036,
        "native": 38592,
        "code": 1341800,
        "jsArrays": 23576,
        "strings": 417916,
        "system": 238460
      }
    },
    "after": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44647,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45937,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45946,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1308,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 268,
              "columnNumber": 25,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "() => {\n      console.log('Window resized to:', window.innerWidth, window.innerHeight);\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 3616212,
        "v8heap": 3552820,
        "native": 63392,
        "code": 1625452,
        "jsArrays": 24420,
        "strings": 417960,
        "system": 238052
      }
    },
    "delta": 316584,
    "deltaPerIteration": 45226,
    "numIterations": 7
  }
},
{
  "test": {
    "data": {
      "href": "/page2",
      "fullHref": "http://localhost:3000/page2"
    },
    "description": "Go to /page2 and back"
  },
  "result": {
    "leaks": {
      "collections": [],
      "eventListeners": [],
      "eventListenersSummary": {
        "before": 139,
        "after": 139,
        "delta": 0,
        "deltaPerIteration": 0
      },
      "domNodes": {
        "delta": 0,
        "deltaPerIteration": 0,
        "nodes": []
      },
      "objects": [
        {
          "name": "Detached <div>",
          "diff": {
            "name": "Detached <div>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102528,
              102120,
              102186,
              102294,
              102414,
              102600,
              102660
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <div>",
              "idxs": [
                103428
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <div>",
              "idxs": [
                102528,
                103890,
                102120,
                102186,
                102294,
                102414,
                102600,
                102660
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "Detached <h1>",
          "diff": {
            "name": "Detached <h1>",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 1792,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102486,
              102138,
              102252,
              102312,
              102468,
              102558,
              102618
            ],
            "countDelta": 7,
            "sizeDelta": 1792
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 256,
              "maxRet": 256,
              "name": "Detached <h1>",
              "idxs": [
                103362
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 2048,
              "maxRet": 2048,
              "name": "Detached <h1>",
              "idxs": [
                102486,
                103824,
                102138,
                102252,
                102312,
                102468,
                102558,
                102618
              ]
            }
          },
          "retainedSizeDelta": 1792,
          "retainedSizeDeltaPerIteration": 256,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "Detached ElementIntersectionObserverData",
          "diff": {
            "name": "Detached ElementIntersectionObserverData",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 504,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              396660,
              398274,
              398292,
              401616,
              402690,
              404802,
              404862
            ],
            "countDelta": 7,
            "sizeDelta": 504
          },
          "aggregates": {
            "before": {
              "count": 1,
              "distance": -5,
              "self": 72,
              "maxRet": 72,
              "name": "Detached ElementIntersectionObserverData",
              "idxs": [
                385632
              ]
            },
            "after": {
              "count": 8,
              "distance": -5,
              "self": 576,
              "maxRet": 576,
              "name": "Detached ElementIntersectionObserverData",
              "idxs": [
                396894,
                396660,
                398274,
                398292,
                401616,
                402690,
                404802,
                404862
              ]
            }
          },
          "retainedSizeDelta": 504,
          "retainedSizeDeltaPerIteration": 72,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "FiberNode",
          "diff": {
            "name": "FiberNode",
            "addedCount": 20,
            "removedCount": 13,
            "addedSize": 2640,
            "removedSize": 1716,
            "deletedIndexes": [
              301662,
              301710,
              314742,
              315012,
              315042,
              315072,
              315078,
              315108,
              315114,
              315144,
              315186,
              315786,
              316350
            ],
            "addedIndexes": [
              297642,
              327672,
              369492,
              369678,
              370452,
              370470,
              370500,
              370518,
              370536,
              371256,
              371592,
              371856,
              371886,
              371916,
              371922,
              371952,
              371958,
              371988,
              372024,
              373146
            ],
            "countDelta": 7,
            "sizeDelta": 924
          },
          "aggregates": {
            "before": {
              "count": 36,
              "distance": 4,
              "self": 4752,
              "maxRet": 14788,
              "name": "FiberNode",
              "idxs": [
                280182,
                296346,
                296364,
                299760,
                299808,
                299850,
                299868,
                300204,
                300228,
                300468,
                300480,
                300510,
                300522,
                300552,
                300558,
                300942,
                300948,
                300984,
                300996,
                301602,
                301620,
                301662,
                301680,
                301710,
                313872,
                314742,
                315012,
                315042,
                315072,
                315078,
                315108,
                315114,
                315144,
                315186,
                315786,
                316350
              ]
            },
            "after": {
              "count": 43,
              "distance": 4,
              "self": 5676,
              "maxRet": 16404,
              "name": "FiberNode",
              "idxs": [
                276120,
                292320,
                292338,
                295764,
                295812,
                295854,
                295872,
                296214,
                296238,
                296460,
                296472,
                296502,
                296514,
                296544,
                296550,
                296934,
                296940,
                296976,
                296988,
                297582,
                297600,
                297660,
                311472,
                297642,
                327672,
                369492,
                369678,
                370452,
                370470,
                370500,
                370518,
                370536,
                371256,
                371592,
                371856,
                371886,
                371916,
                371922,
                371952,
                371958,
                371988,
                372024,
                373146
              ]
            }
          },
          "retainedSizeDelta": 1616,
          "retainedSizeDeltaPerIteration": 231,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "HTMLAnchorElement",
          "diff": {
            "name": "HTMLAnchorElement",
            "addedCount": 7,
            "removedCount": 0,
            "addedSize": 112,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              19452,
              19458,
              19464,
              19470,
              19476,
              19482,
              19488
            ],
            "countDelta": 7,
            "sizeDelta": 112
          },
          "aggregates": {
            "before": {
              "count": 7,
              "distance": 4,
              "self": 1248,
              "maxRet": 2032,
              "name": "HTMLAnchorElement",
              "idxs": [
                19866,
                103374,
                103506,
                163572,
                252714,
                302310,
                308352
              ]
            },
            "after": {
              "count": 14,
              "distance": 4,
              "self": 1360,
              "maxRet": 2144,
              "name": "HTMLAnchorElement",
              "idxs": [
                19914,
                103836,
                103968,
                158178,
                248436,
                298248,
                304380,
                19452,
                19458,
                19464,
                19470,
                19476,
                19482,
                19488
              ]
            }
          },
          "retainedSizeDelta": 112,
          "retainedSizeDeltaPerIteration": 16,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "system / Context",
          "diff": {
            "name": "system / Context",
            "addedCount": 18,
            "removedCount": 11,
            "addedSize": 564,
            "removedSize": 424,
            "deletedIndexes": [
              313314,
              314502,
              315372,
              315486,
              315510,
              315972,
              316080,
              316104,
              316536,
              316644,
              316668
            ],
            "addedIndexes": [
              369168,
              369222,
              369276,
              369372,
              369378,
              369432,
              370986,
              371292,
              371352,
              372210,
              372318,
              372342,
              372768,
              372876,
              372900,
              373332,
              373440,
              373464
            ],
            "countDelta": 7,
            "sizeDelta": 140
          },
          "aggregates": {
            "before": {
              "count": 435,
              "distance": 3,
              "self": 20240,
              "maxRet": 222248,
              "name": "system / Context",
              "idxs": [
                138744,
                140202,
                140214,
                140226,
                140238,
                140250,
                140262,
                140274,
                140286,
                140298,
                140340,
                140352,
                140364,
                140412,
                140424,
                140436,
                140448,
                140460,
                140472,
                140484,
                140496,
                140508,
                140520,
                140532,
                140544,
                140556,
                140568,
                140580,
                140610,
                140622,
                140634,
                140646,
                140658,
                140670,
                140682,
                140718,
                140772,
                140820,
                140832,
                165870,
                166992,
                167010,
                167028,
                167076,
                167094,
                167106,
                167124,
                167142,
                167160,
                167202,
                167220,
                167238,
                167268,
                167292,
                167310,
                167328,
                167340,
                167364,
                167376,
                167388,
                167400,
                167418,
                167430,
                167448,
                167460,
                167472,
                167484,
                167496,
                167508,
                167520,
                167538,
                167556,
                167568,
                167586,
                167610,
                167664,
                167694,
                167706,
                171798,
                171840,
                172020,
                172362,
                235836,
                254370,
                254430,
                254448,
                254676,
                254688,
                254700,
                254712,
                255270,
                255276,
                255288,
                255300,
                255318,
                255366,
                255372,
                255378,
                255396,
                255414,
                255438,
                255450,
                255456,
                255492,
                255516,
                255522,
                255810,
                255834,
                255942,
                255984,
                256014,
                256032,
                256050,
                256092,
                256170,
                256188,
                256548,
                256578,
                256596,
                256854,
                256896,
                256986,
                257136,
                257310,
                257436,
                257484,
                257598,
                257856,
                257946,
                257976,
                257994,
                258246,
                258264,
                258306,
                258576,
                258618,
                259170,
                259422,
                259446,
                259464,
                259482,
                259500,
                259518,
                259536,
                259554,
                259572,
                259590,
                259608,
                259626,
                259644,
                259662,
                259680,
                259698,
                259716,
                259734,
                259752,
                259770,
                259788,
                259806,
                259818,
                260532,
                260544,
                260628,
                260646,
                260664,
                260682,
                260700,
                260718,
                260736,
                260754,
                260772,
                260790,
                260808,
                260826,
                260844,
                260862,
                260880,
                260898,
                260916,
                260934,
                260952,
                260970,
                260988,
                261000,
                268224,
                268344,
                268554,
                271710,
                272514,
                272520,
                272526,
                272532,
                272538,
                272544,
                272646,
                272706,
                272760,
                272814,
                272868,
                272928,
                272982,
                273036,
                273090,
                273144,
                273198,
                273252,
                273306,
                273690,
                274842,
                274848,
                274860,
                274974,
                274980,
                274986,
                275076,
                275280,
                275448,
                275934,
                283830,
                284742,
                285078,
                285858,
                286050,
                286122,
                286194,
                286266,
                286350,
                286422,
                286494,
                286740,
                286818,
                286974,
                287004,
                287022,
                287076,
                287094,
                287106,
                287124,
                287142,
                287160,
                287178,
                287196,
                287214,
                287232,
                287250,
                287268,
                287286,
                287304,
                287322,
                287340,
                287358,
                287376,
                287394,
                287412,
                287430,
                287448,
                287466,
                287478,
                287760,
                287778,
                287796,
                287814,
                287832,
                287850,
                287868,
                287886,
                287904,
                287922,
                287940,
                287958,
                287976,
                287994,
                288012,
                288030,
                288048,
                288066,
                288084,
                288102,
                288120,
                288132,
                288222,
                288252,
                288270,
                290466,
                290496,
                290520,
                290850,
                290862,
                291078,
                291180,
                291474,
                291480,
                291486,
                291528,
                291546,
                291552,
                291570,
                291576,
                291594,
                295902,
                295920,
                295926,
                295944,
                296322,
                296328,
                296334,
                297384,
                297402,
                300012,
                300060,
                313314,
                313920,
                314502,
                315372,
                315486,
                315510,
                315972,
                316080,
                316104,
                316536,
                316644,
                316668,
                321720,
                324768,
                324774,
                324780,
                324792,
                324804,
                324810,
                324822,
                324834,
                324846,
                324858,
                324894,
                324900,
                324906,
                324918,
                324930,
                324936,
                324948,
                324960,
                324972,
                324984,
                331854,
                332214,
                332712,
                336000,
                336006,
                336012,
                336018,
                336024,
                336030,
                336036,
                337008,
                337014,
                337038,
                337044,
                337050,
                337056,
                337092,
                337704,
                338184,
                338190,
                338196,
                338202,
                338208,
                338214,
                338250,
                338274,
                339036,
                339042,
                339048,
                339054,
                339060,
                339066,
                339954,
                339960,
                339966,
                339972,
                339978,
                339984,
                339990,
                340710,
                342702,
                342708,
                342714,
                342720,
                342726,
                342732,
                342738,
                342744,
                342750,
                342756,
                342762,
                342768,
                342774,
                342780,
                342786,
                342792,
                342798,
                342804,
                342810,
                342816,
                342822,
                362982,
                362988,
                362994,
                363798,
                363804,
                363810,
                363816,
                363822,
                363828,
                363834,
                363912,
                364716,
                364722,
                364728,
                364734,
                364740,
                364746,
                364752,
                365586,
                365592,
                365598,
                365604,
                365610,
                365616,
                365622,
                366342,
                366348,
                366354,
                366360,
                366366,
                366372
              ]
            },
            "after": {
              "count": 442,
              "distance": 3,
              "self": 20380,
              "maxRet": 254648,
              "name": "system / Context",
              "idxs": [
                132984,
                134478,
                134490,
                134502,
                134514,
                134526,
                134538,
                134550,
                134562,
                134574,
                134616,
                134628,
                134640,
                134688,
                134700,
                134712,
                134724,
                134736,
                134748,
                134760,
                134772,
                134784,
                134796,
                134808,
                134820,
                134832,
                134844,
                134856,
                134886,
                134898,
                134910,
                134922,
                134934,
                134946,
                134958,
                134994,
                135054,
                135102,
                135114,
                160476,
                161616,
                161634,
                161652,
                161700,
                161718,
                161730,
                161748,
                161766,
                161784,
                161826,
                161844,
                161862,
                161892,
                161916,
                161934,
                161952,
                161964,
                161988,
                162000,
                162012,
                162024,
                162042,
                162054,
                162072,
                162084,
                162096,
                162108,
                162120,
                162132,
                162144,
                162162,
                162186,
                162198,
                162216,
                162240,
                162294,
                162324,
                162336,
                166458,
                166500,
                166680,
                167028,
                231552,
                250092,
                250152,
                250170,
                250398,
                250410,
                250422,
                250434,
                250992,
                250998,
                251010,
                251022,
                251040,
                251088,
                251094,
                251100,
                251118,
                251136,
                251160,
                251172,
                251178,
                251214,
                251238,
                251244,
                251532,
                251556,
                251664,
                251706,
                251736,
                251754,
                251772,
                251814,
                251892,
                251910,
                252270,
                252300,
                252318,
                252576,
                252618,
                252708,
                252858,
                253032,
                253158,
                253206,
                253320,
                253578,
                253668,
                253698,
                253716,
                253968,
                253986,
                254028,
                254298,
                254340,
                254892,
                255144,
                255168,
                255186,
                255204,
                255222,
                255240,
                255258,
                255276,
                255294,
                255312,
                255330,
                255348,
                255366,
                255384,
                255402,
                255420,
                255438,
                255456,
                255474,
                255492,
                255510,
                255528,
                255540,
                256254,
                256266,
                256350,
                256368,
                256386,
                256404,
                256422,
                256440,
                256458,
                256476,
                256494,
                256512,
                256530,
                256548,
                256566,
                256584,
                256602,
                256620,
                256638,
                256656,
                256674,
                256692,
                256710,
                256722,
                263940,
                264060,
                264270,
                267420,
                268224,
                268230,
                268236,
                268242,
                268248,
                268254,
                268356,
                268416,
                268470,
                268524,
                268578,
                268638,
                268692,
                268746,
                268800,
                268854,
                268908,
                268962,
                269016,
                269400,
                270552,
                270558,
                270570,
                270684,
                270690,
                270696,
                270786,
                270990,
                271158,
                271644,
                279762,
                280674,
                281010,
                281808,
                282000,
                282072,
                282144,
                282216,
                282300,
                282372,
                282444,
                282690,
                282768,
                282924,
                282954,
                282972,
                283026,
                283044,
                283056,
                283074,
                283092,
                283110,
                283128,
                283146,
                283164,
                283182,
                283200,
                283218,
                283236,
                283254,
                283272,
                283290,
                283308,
                283326,
                283344,
                283362,
                283380,
                283398,
                283416,
                283428,
                283710,
                283728,
                283746,
                283764,
                283782,
                283800,
                283818,
                283836,
                283854,
                283872,
                283890,
                283908,
                283926,
                283944,
                283962,
                283980,
                283998,
                284016,
                284034,
                284052,
                284070,
                284082,
                284172,
                284202,
                284220,
                286416,
                286446,
                286476,
                286806,
                286818,
                287034,
                287136,
                287430,
                287436,
                287442,
                287484,
                287502,
                287508,
                287526,
                287532,
                287550,
                291876,
                291894,
                291900,
                291918,
                292296,
                292302,
                292308,
                293358,
                293376,
                296022,
                296070,
                311520,
                321546,
                325620,
                325626,
                325632,
                325644,
                325656,
                325662,
                325674,
                325686,
                325698,
                325710,
                325746,
                325752,
                325758,
                325770,
                325782,
                325788,
                325800,
                325812,
                325824,
                325836,
                332496,
                332820,
                333312,
                336618,
                336624,
                336630,
                336636,
                336642,
                336648,
                336654,
                337626,
                337632,
                337656,
                337662,
                337668,
                337674,
                337710,
                338322,
                338802,
                338808,
                338814,
                338820,
                338826,
                338832,
                338868,
                338886,
                339642,
                339648,
                339654,
                339660,
                339666,
                339672,
                340560,
                340566,
                340572,
                340578,
                340584,
                340590,
                340596,
                341334,
                343326,
                343332,
                343338,
                343344,
                343350,
                343356,
                343362,
                343368,
                343374,
                343380,
                343386,
                343392,
                343398,
                343404,
                343410,
                343416,
                343422,
                343428,
                343434,
                343440,
                343446,
                373812,
                373818,
                373824,
                374628,
                374634,
                374640,
                374646,
                374652,
                374658,
                374664,
                374742,
                375546,
                375552,
                375558,
                375564,
                375570,
                375576,
                375582,
                376416,
                376422,
                376428,
                376434,
                376440,
                376446,
                376452,
                377172,
                377178,
                377184,
                377190,
                377196,
                377202,
                369168,
                369222,
                369276,
                369372,
                369378,
                369432,
                370986,
                371292,
                371352,
                372210,
                372318,
                372342,
                372768,
                372876,
                372900,
                373332,
                373440,
                373464
              ]
            }
          },
          "retainedSizeDelta": 32400,
          "retainedSizeDeltaPerIteration": 4629,
          "countDelta": 7,
          "countDeltaPerIteration": 1,
          "numIterations": 7
        },
        {
          "name": "DOMTimer",
          "diff": {
            "name": "DOMTimer",
            "addedCount": 14,
            "removedCount": 0,
            "addedSize": 2688,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              396690,
              396702,
              396726,
              396738,
              396750,
              396774,
              396786,
              396798,
              396810,
              396822,
              396834,
              396852,
              396858,
              396864
            ],
            "countDelta": 14,
            "sizeDelta": 2688
          },
          "aggregates": {
            "before": {
              "count": 2,
              "distance": 6,
              "self": 384,
              "maxRet": 632,
              "name": "DOMTimer",
              "idxs": [
                380352,
                380364
              ]
            },
            "after": {
              "count": 16,
              "distance": 6,
              "self": 3072,
              "maxRet": 5056,
              "name": "DOMTimer",
              "idxs": [
                396714,
                396762,
                396690,
                396702,
                396726,
                396738,
                396750,
                396774,
                396786,
                396798,
                396810,
                396822,
                396834,
                396852,
                396858,
                396864
              ]
            }
          },
          "retainedSizeDelta": 4424,
          "retainedSizeDeltaPerIteration": 632,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "ScheduledAction",
          "diff": {
            "name": "ScheduledAction",
            "addedCount": 14,
            "removedCount": 0,
            "addedSize": 784,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              396696,
              396708,
              396732,
              396744,
              396756,
              396780,
              396792,
              396804,
              396816,
              396828,
              396840,
              398130,
              400824,
              403938
            ],
            "countDelta": 14,
            "sizeDelta": 784
          },
          "aggregates": {
            "before": {
              "count": 2,
              "distance": 7,
              "self": 112,
              "maxRet": 248,
              "name": "ScheduledAction",
              "idxs": [
                380358,
                380370
              ]
            },
            "after": {
              "count": 16,
              "distance": 7,
              "self": 896,
              "maxRet": 1984,
              "name": "ScheduledAction",
              "idxs": [
                396720,
                396768,
                396696,
                396708,
                396732,
                396744,
                396756,
                396780,
                396792,
                396804,
                396816,
                396828,
                396840,
                398130,
                400824,
                403938
              ]
            }
          },
          "retainedSizeDelta": 1736,
          "retainedSizeDeltaPerIteration": 248,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "V8Function",
          "diff": {
            "name": "V8Function",
            "addedCount": 14,
            "removedCount": 0,
            "addedSize": 560,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              397158,
              397818,
              397950,
              398142,
              398166,
              398340,
              398406,
              398454,
              398550,
              398742,
              401070,
              401112,
              404376,
              404526
            ],
            "countDelta": 14,
            "sizeDelta": 560
          },
          "aggregates": {
            "before": {
              "count": 2,
              "distance": 8,
              "self": 80,
              "maxRet": 136,
              "name": "V8Function",
              "idxs": [
                380658,
                380670
              ]
            },
            "after": {
              "count": 16,
              "distance": 8,
              "self": 640,
              "maxRet": 1088,
              "name": "V8Function",
              "idxs": [
                398700,
                398712,
                397158,
                397818,
                397950,
                398142,
                398166,
                398340,
                398406,
                398454,
                398550,
                398742,
                401070,
                401112,
                404376,
                404526
              ]
            }
          },
          "retainedSizeDelta": 952,
          "retainedSizeDeltaPerIteration": 136,
          "countDelta": 14,
          "countDeltaPerIteration": 2,
          "numIterations": 7
        },
        {
          "name": "Detached <a>",
          "diff": {
            "name": "Detached <a>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 6216,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102492,
              102504,
              102516,
              102144,
              102162,
              102174,
              102258,
              102270,
              102282,
              102318,
              102330,
              102342,
              102426,
              102438,
              102462,
              102564,
              102576,
              102588,
              102624,
              102636,
              102648
            ],
            "countDelta": 21,
            "sizeDelta": 6216
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 888,
              "maxRet": 888,
              "name": "Detached <a>",
              "idxs": [
                103380,
                103404,
                103416
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 7104,
              "maxRet": 7104,
              "name": "Detached <a>",
              "idxs": [
                102492,
                102504,
                102516,
                103842,
                103866,
                103878,
                102144,
                102162,
                102174,
                102258,
                102270,
                102282,
                102318,
                102330,
                102342,
                102426,
                102438,
                102462,
                102564,
                102576,
                102588,
                102624,
                102636,
                102648
              ]
            }
          },
          "retainedSizeDelta": 6216,
          "retainedSizeDeltaPerIteration": 888,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached <p>",
          "diff": {
            "name": "Detached <p>",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 5376,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              102498,
              102510,
              102522,
              102156,
              102168,
              102180,
              102264,
              102276,
              102288,
              102324,
              102336,
              102348,
              102420,
              102432,
              102456,
              102570,
              102582,
              102594,
              102630,
              102642,
              102654
            ],
            "countDelta": 21,
            "sizeDelta": 5376
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached <p>",
              "idxs": [
                103398,
                103410,
                103422
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 6144,
              "maxRet": 6144,
              "name": "Detached <p>",
              "idxs": [
                102498,
                102510,
                102522,
                103860,
                103872,
                103884,
                102156,
                102168,
                102180,
                102264,
                102276,
                102288,
                102324,
                102336,
                102348,
                102420,
                102432,
                102456,
                102570,
                102582,
                102594,
                102630,
                102642,
                102654
              ]
            }
          },
          "retainedSizeDelta": 5376,
          "retainedSizeDeltaPerIteration": 768,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached DOMTokenList",
          "diff": {
            "name": "Detached DOMTokenList",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1176,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              398616,
              403146,
              404514,
              398232,
              398316,
              398364,
              398376,
              398400,
              398430,
              398436,
              398544,
              400020,
              400068,
              400284,
              400848,
              401454,
              401490,
              401796,
              401952,
              403170,
              403320
            ],
            "countDelta": 21,
            "sizeDelta": 1176
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 168,
              "maxRet": 168,
              "name": "Detached DOMTokenList",
              "idxs": [
                380712,
                380724,
                385638
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1344,
              "maxRet": 1344,
              "name": "Detached DOMTokenList",
              "idxs": [
                398616,
                402936,
                398802,
                403146,
                404760,
                404514,
                398232,
                398316,
                398364,
                398376,
                398400,
                398430,
                398436,
                398544,
                400020,
                400068,
                400284,
                400848,
                401454,
                401490,
                401796,
                401952,
                403170,
                403320
              ]
            }
          },
          "retainedSizeDelta": 1176,
          "retainedSizeDeltaPerIteration": 168,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached EventListener",
          "diff": {
            "name": "Detached EventListener",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 1512,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              402636,
              399072,
              402660,
              398064,
              399480,
              401136,
              401388,
              401478,
              401802,
              401928,
              402324,
              402444,
              402456,
              402480,
              402498,
              402510,
              402522,
              402528,
              402588,
              403014,
              403182
            ],
            "countDelta": 21,
            "sizeDelta": 1512
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 216,
              "maxRet": 216,
              "name": "Detached EventListener",
              "idxs": [
                383580,
                384024,
                386172
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 1728,
              "maxRet": 1728,
              "name": "Detached EventListener",
              "idxs": [
                401700,
                402636,
                399072,
                402660,
                402714,
                397884,
                398064,
                399480,
                401136,
                401388,
                401478,
                401802,
                401928,
                402324,
                402444,
                402456,
                402480,
                402498,
                402510,
                402522,
                402528,
                402588,
                403014,
                403182
              ]
            }
          },
          "retainedSizeDelta": 1512,
          "retainedSizeDeltaPerIteration": 216,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached V8EventHandlerNonNull",
          "diff": {
            "name": "Detached V8EventHandlerNonNull",
            "addedCount": 21,
            "removedCount": 0,
            "addedSize": 672,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              398592,
              399078,
              402666,
              397242,
              397260,
              398370,
              398394,
              398478,
              398508,
              398538,
              398718,
              398856,
              400806,
              400842,
              401010,
              401022,
              401226,
              401352,
              402330,
              402534,
              403392
            ],
            "countDelta": 21,
            "sizeDelta": 672
          },
          "aggregates": {
            "before": {
              "count": 3,
              "distance": -5,
              "self": 96,
              "maxRet": 96,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                380706,
                380718,
                386178
              ]
            },
            "after": {
              "count": 24,
              "distance": -5,
              "self": 768,
              "maxRet": 768,
              "name": "Detached V8EventHandlerNonNull",
              "idxs": [
                398592,
                401250,
                398778,
                399078,
                402666,
                398772,
                397242,
                397260,
                398370,
                398394,
                398478,
                398508,
                398538,
                398718,
                398856,
                400806,
                400842,
                401010,
                401022,
                401226,
                401352,
                402330,
                402534,
                403392
              ]
            }
          },
          "retainedSizeDelta": 672,
          "retainedSizeDeltaPerIteration": 96,
          "countDelta": 21,
          "countDeltaPerIteration": 3,
          "numIterations": 7
        },
        {
          "name": "Detached Text",
          "diff": {
            "name": "Detached Text",
            "addedCount": 28,
            "removedCount": 0,
            "addedSize": 2464,
            "removedSize": 0,
            "deletedIndexes": [],
            "addedIndexes": [
              396126,
              403134,
              396054,
              396954,
              396012,
              396018,
              396024,
              396042,
              396048,
              396060,
              396066,
              396072,
              396084,
              396090,
              396096,
              396102,
              396108,
              396114,
              396120,
              397320,
              401460,
              401706,
              402072,
              402174,
              402198,
              403176,
              403638,
              404724
            ],
            "countDelta": 28,
            "sizeDelta": 2464
          },
          "aggregates": {
            "before": {
              "count": 4,
              "distance": -5,
              "self": 352,
              "maxRet": 352,
              "name": "Detached Text",
              "idxs": [
                379848,
                379854,
                383166,
                385644
              ]
            },
            "after": {
              "count": 32,
              "distance": -5,
              "self": 2816,
              "maxRet": 2816,
              "name": "Detached Text",
              "idxs": [
                396030,
                396078,
                396126,
                403134,
                396054,
                396036,
                396954,
                397218,
                396012,
                396018,
                396024,
                396042,
                396048,
                396060,
                396066,
                396072,
                396084,
                396090,
                396096,
                396102,
                396108,
                396114,
                396120,
                397320,
                401460,
                401706,
                402072,
                402174,
                402198,
                403176,
                403638,
                404724
              ]
            }
          },
          "retainedSizeDelta": 2464,
          "retainedSizeDeltaPerIteration": 352,
          "countDelta": 28,
          "countDeltaPerIteration": 4,
          "numIterations": 7
        }
      ],
      "detected": true
    },
    "before": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44647,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45937,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45946,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1308,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 3303544,
        "v8heap": 3265296,
        "native": 38248,
        "code": 1342536,
        "jsArrays": 23648,
        "strings": 418156,
        "system": 238500
      }
    },
    "after": {
      "eventListeners": [
        {
          "node": {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          "listeners": [
            {
              "type": "abort",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "canplay",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "canplaythrough",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "close",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "durationchange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "emptied",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "encrypted",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ended",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "error",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "invalid",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "load",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadeddata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadedmetadata",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "loadstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pause",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "play",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "playing",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "progress",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "ratechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "resize",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeked",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "seeking",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "stalled",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "suspend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "timeupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "volumechange",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "scroll",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "toggle",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "waiting",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": true,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": true,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "auxclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            },
            {
              "type": "contextmenu",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "copy",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "cut",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drag",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragenter",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragexit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragleave",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "dragstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "drop",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "gotpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "input",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keydown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keypress",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "keyup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "lostpointercapture",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "mousedown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mousemove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "mouseup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "paste",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointercancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerdown",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointermove",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerover",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "pointerup",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "reset",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "submit",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchcancel",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchstart",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "touchmove",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "wheel",
              "useCapture": false,
              "passive": true,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16341,
              "columnNumber": 36,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(ContinuousEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "animationend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationiteration",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "animationstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "dblclick",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusin",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "focusout",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "transitionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16353,
              "columnNumber": 26,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {\n      if (!_enabled) {\n        return;\n      }\n      {\n        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);\n      }\n    }"
              }
            },
            {
              "type": "change",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionend",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "textInput",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionstart",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            },
            {
              "type": "compositionupdate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          "listeners": [
            {
              "type": "click",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 19163,
              "columnNumber": 17,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function noop() {}"
              }
            }
          ]
        },
        {
          "node": {
            "className": "Window",
            "description": "Window"
          },
          "listeners": [
            {
              "type": "beforeunload",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 44647,
              "columnNumber": 47,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function () {\n  status.isUnloading = true;\n}"
              }
            },
            {
              "type": "error",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45937,
              "columnNumber": 93,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (errorEvent) {\n      // error property may be empty in older browser like IE\n      var error = errorEvent.error,\n        message = errorEvent.message;\n      if (!error && !message) {\n        return;\n      }\n      handleError(error, message);\n    }"
              }
            },
            {
              "type": "unhandledrejection",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 45946,
              "columnNumber": 99,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function (promiseRejectionEvent) {\n      var reason = promiseRejectionEvent.reason;\n      handleError(reason, \"Unknown promise rejection reason\");\n    }"
              }
            },
            {
              "type": "popstate",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 1308,
              "columnNumber": 20,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }"
              }
            }
          ]
        },
        {
          "node": {
            "className": "HTMLDocument",
            "description": "#document"
          },
          "listeners": [
            {
              "type": "selectionchange",
              "useCapture": false,
              "passive": false,
              "once": false,
              "scriptId": "6",
              "lineNumber": 16329,
              "columnNumber": 34,
              "handler": {
                "type": "function",
                "className": "Function",
                "description": "function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {\n      var previousPriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = null;\n      try {\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig.transition = prevTransition;\n      }\n    }"
              }
            }
          ]
        }
      ],
      "domNodes": {
        "count": 23,
        "nodes": [
          {
            "className": "HTMLHtmlElement",
            "description": "html"
          },
          {
            "className": "HTMLHeadElement",
            "description": "head"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLMetaElement",
            "description": "meta"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLLinkElement",
            "description": "link"
          },
          {
            "className": "HTMLTitleElement",
            "description": "title"
          },
          {
            "className": "HTMLScriptElement",
            "description": "script"
          },
          {
            "className": "HTMLBodyElement",
            "description": "body"
          },
          {
            "className": "HTMLElement",
            "description": "noscript"
          },
          {
            "className": "HTMLDivElement",
            "description": "div#root"
          },
          {
            "className": "HTMLDivElement",
            "description": "div.App"
          },
          {
            "className": "HTMLDivElement",
            "description": "div"
          },
          {
            "className": "HTMLHeadingElement",
            "description": "h1"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          },
          {
            "className": "HTMLParagraphElement",
            "description": "p"
          },
          {
            "className": "HTMLAnchorElement",
            "description": "a"
          }
        ]
      },
      "statistics": {
        "total": 3639696,
        "v8heap": 3575912,
        "native": 63784,
        "code": 1639816,
        "jsArrays": 25356,
        "strings": 418200,
        "system": 238120
      }
    },
    "delta": 336152,
    "deltaPerIteration": 48022,
    "numIterations": 7
  }
}
]